{"title":"The Classical Linear Model","markdown":{"headingText":"The Classical Linear Model","headingAttr":{"id":"sec-ols","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\\DeclareMathOperator{\\plim}{plim}\n\\DeclareMathOperator{\\argmin}{argmin}\n\\DeclareMathOperator{\\argmax}{argmax}\n\\newcommand{\\var}[1]{\\text{Var}\\left(#1\\right)}\n\\newcommand{\\avar}[1]{\\text{Avar}\\left(#1\\right)}\n\\newcommand{\\E}[1]{\\text{E}\\left[#1\\right]}\n\\newcommand{\\cov}[1]{\\text{Cov}\\left(#1\\right)}\n\\newcommand{\\mse}[1]{\\text{MSE}\\left(#1\\right)}\n\\newcommand{\\se}[1]{\\text{se}\\left(#1\\right)}\n\\newcommand{\\limfunc}{lim} \n\\newcommand{\\X}{\\mathbf{X}}\n\\newcommand{\\Xm}{\\mathbb{X}}\n\\newcommand{\\EER}{\\bar{\\thet}_\\text{EE}}\n\\newcommand{\\NLS}{\\hat{\\bet}_\\text{NLLS}}\n\\newcommand{\\z}{\\mathbf{z}}\n\\newcommand{\\rr}{\\mathbf{r}}\n\\newcommand{\\C}{\\mathbf{C}}\n\\newcommand{\\Pe}{\\mathbf{P}}\n\\newcommand{\\y}{\\mathbf{y}}\n\\newcommand{\\Y}{\\mathbf{Y}}\n\\newcommand{\\uu}{\\mathbf{u}}\n\\newcommand{\\e}{\\mathbf{e}}\n\\newcommand{\\D}{\\mathbf{D}}\n\\newcommand{\\x}{\\mathbf{x}}\n\\newcommand{\\xm}{\\mathbb{x}}\n\\newcommand{\\Zm}{\\mathbb{Z}}\n\\newcommand{\\Wm}{\\mathbb{W}}\n\\newcommand{\\Hm}{\\mathbb{H}}\n\\newcommand{\\W}{\\mathbf{W}}\n\\newcommand{\\Z}{\\mathbf{Z}}\n\\newcommand{\\Hess}{\\mathbf{H}(\\mathbf{\\Z\\mid\\thet})}\n\\newcommand{\\Score}{\\mathbf{S}(\\mathbf{\\Z\\mid\\thet})}\n\\newcommand{\\A}{\\mathbf{A}}\n\\newcommand{\\h}{\\mathbf{h}}\n\\newcommand{\\Q}{\\mathbf{Q}}\n\\newcommand{\\F}{\\mathbf{F}}\n\\newcommand{\\G}{\\mathbf{G}}\n\\newcommand{\\I}{\\mathbf{I}}\n\\renewcommand{\\D}{\\mathbf{D}}\n\\renewcommand{\\C}{\\mathbf{C}}\n\\newcommand{\\zer}{\\mathbf{0}}\n\\newcommand{\\OLS}{\\hat{\\boldsymbol\\beta}_\\text{OLS} }\n\\newcommand{\\OLSOV}{\\hat{\\boldsymbol\\beta}_\\text{OLS,OV} }\n\\newcommand{\\OLSME}{\\hat{\\boldsymbol\\beta}_\\text{OLS,ME} }\n\\newcommand{\\EE}{\\hat{\\boldsymbol\\theta}_\\text{EX} }\n\\newcommand{\\ME}{\\hat{\\boldsymbol\\theta}_\\text{M} }\n\\newcommand{\\MDE}{\\hat{\\boldsymbol\\theta}_\\text{MDE} }\n\\newcommand{\\IV}{\\hat{\\boldsymbol\\beta}_\\text{IV} }\n\\newcommand{\\TSLS}{\\hat{\\boldsymbol\\beta}_\\text{2SLS} }\n\\newcommand{\\thet}{\\boldsymbol{\\theta}}\n\\newcommand{\\et}{\\boldsymbol{\\eta}}\n\\newcommand{\\R}{\\mathbb{R}}\n\\newcommand{\\Sig}{\\boldsymbol{\\Sigma}}\n\\newcommand{\\ep}{\\boldsymbol{\\varepsilon}}\n\\newcommand{\\Omeg}{\\boldsymbol{\\Omega}}\n\\newcommand{\\Thet}{\\boldsymbol{\\Theta}}\n\\newcommand{\\bet}{\\boldsymbol{\\beta}}\n\\newcommand{\\rk}{rank}\n\\newcommand{\\tsum}{\\sum}\n\\newcommand{\\tr}{tr}\n\\newcommand{\\norm}[1]{\\left\\lVert#1\\right\\rVert}\n\\newcommand{\\abs}[1]{\\left\\lvert#1\\right\\rvert}\n\\newcommand{\\ms}{\\overset{ms}{\\to}}\n\\newcommand{\\pto}{\\overset{p}{\\to}}\n\\newcommand{\\iid}{\\overset{iid}{\\sim}}\n\\newcommand{\\dto}{\\overset{d}{\\to}}\n\\newcommand{\\asim}{\\overset{a}{\\sim}}\n\n\n```{r}\n#| echo: false\n#| output: false\nlibrary(ggpubr)\nlibrary(tidyverse)\nlibrary(mvtnorm)\nlibrary(Matrix)\nlibrary(ggpubr)\nlibrary(vctrs)\nlibrary(broom)\nlibrary(car)\n```\n\nNow that we're equipped with all the tools necessary to consider our first econometric model -- the classic linear model. \n\n## Identification, Estimation, and Inference\n\n       Before we cover our first, and arguably most important, model in econometrics, it's worth reiterating how the problems of identification, estimation, and inference are related. It's also important to consider whether these problems occur in the context of a model/population, or a sample drawn from the model/population. [These slides](https://scholar.harvard.edu/files/kasy/files/ia-causalityslides-iv.pdf) provide a nice diagram which provides some insight.  \n\n```{r}\n#| echo: false\n#| fig-align: center\n#| label: fig-plot51\n#| fig-asp: 0.5\n#| fig-width: 2\n#| fig-cap: \"The relationship between models, parameters, and observed data.\"\n\nknitr::include_graphics(\"figures/identification.png\")\n```\n\n       When we posit a model $\\mathcal P$ (which is just a collection of probability distributions), the first thing we need to do is parameterize our model. @angrist2008mostly refer to this as a \"population first\" approach in which we \"define the objects [parameters] of interest before we can use data to study [estimate/make inferences] about them.\" We then must address the question of identification -- for a parameterization $\\thet \\mapsto P_\\thet$, does $\\thet$ uniquely determine $P_\\thet$? If $\\thet = \\thet'$, then is it necessarily the case that $P_\\thet = P_{\\thet'}$? For this to be the case, we will usually need to amend our initial model by adding one or more assumptions. Once this is done, we can tackle the problem of estimation/inference given a sample drawn from the population knowing that once we've made a decision (whether that be an estimate or rejecting a null hypothesis) regarding the parameter space $\\boldsymbol\\Theta$, that it will be equivalent to a decision about the model $\\mathcal P$ via identification. \n\n       Another way to think about identification is in terms of some \"perfect\" estimate of $\\thet$. Imagine that you had an infinite amount of data such that it was guaranteed that $\\hat{\\thet} = \\thet$. If $\\thet$ is not identified, then our perfect estimate $\\hat{\\thet} = \\thet$ could correspond to multiple $P_\\thet \\in \\mathcal P$, so it is impossible to know the which model value $P_\\thet$ generated the infinite amount of data which gave us our estimate. This speaks to how fundamental the problem of identification is. We usually like to focus on all the nice properties an estimator has, but even if that estimator checks all the boxes, it is meaningless if our parameters/model isn't identified. \n\n       The term \"identification\" can sometimes be the cause of confusion because it appears in a wide array of contexts, and definitions of identification sometimes only apply to a specific model.^[For example, identification is sometimes defined in the context of the rank of a particular matrix.] For an *excellent* survey of identification in econometrics see @lewbel2019identification.    \n\n## Conditional Expectation and Linear Projection\n\nWe will begin with an example owing to @galton1886regression.\n\n:::{#exm-}\nSuppose we are interested in how the height of two parents is related to their child's height. Let $X$ be a random variable associated with the average height of two parents, and $Y$ be a random variable associated with the height of a child. Furthermore, assume the joint distribution of $(X,Y)$ is:\n\\begin{align*}\n(X,Y) &\\sim N(\\boldsymbol \\mu, \\boldsymbol \\Sigma),\\\\\n\\boldsymbol \\mu & = [68, 68]',\\\\\n\\boldsymbol \\Sigma & = \\begin{bmatrix}8 & 4\\\\ 4 & 6\\end{bmatrix}.\n\\end{align*}\nAs a consequence, $X \\sim N(68, 8)$ and $Y ~ N(68,6)$ have the same marginal density of $N(68, 8)$. In other words, the average height of individuals is the same across generations. The variance of $X$ and $Y$ are given as $\\sigma_X^2=\\Sig_{11}$ and $\\sigma_Y^2 = \\Sig_{22}$.  \n\n```{r}\n#| code-fold: true\n#| label: fig-plot52\n#| fig-align: center\n#| fig-asp: 1\n#| fig-width: 8\n#| fig-cap: \"The marginal desnity of childs' and parents' height along with their joint density\"\n#| code-summary: \"Show code which generates figure\"\nmu <- c(68, 68)\nSigma <- matrix(c(8, 4, 4, 6), ncol = 2)\n\np1 <- tibble(x = c(seq(57, 80, length = 1000), seq(57, 80, length = 1000)),\n           key = c(rep(\"Parents\", 1000), rep(\"Child\", 1000))\n  ) %>% \n  mutate(y = dnorm(x, 68, sqrt(8))) %>% \n  ggplot(aes(x, y)) +\n  geom_line() +\n  facet_wrap(~key, scales = \"free\") +\n  theme_minimal() +\n  labs(x = \"Height (in)\",\n       y = \"density\")\n\ndf <- expand_grid(\n  x = c(seq(57, 80, length = 1000), 60, 65, 70, 75), \n  y = seq(57, 80, length = 1000)\n)\ndf$p <- dmvnorm(df, mu, Sigma)\np2 <- ggplot(df, aes(x, y, z = p)) +\n  geom_contour(bins = 20, color = \"black\") +\n  theme_minimal() +\n  labs(x = \"Parents' (Average) Height (in)\", y = \"Child's Height (in)\")\n\nggarrange(p1, p2, ncol = 1)\n```\n\nIf we want to predict a child's height using parents' height $X = x$, we can inspect the conditional expectation $\\E{Y\\mid X = x}$. This expectation is given as \n\n\\begin{align*}\n\\E{Y\\mid X = x} & = \\int_{\\mathcal Y} y\\cdot f_{Y\\mid x}(y\\mid x)\\ dy\\\\ & = \\int_{\\mathcal Y} y\\cdot \\frac{f_{Y,X}(y \\mid x, \\boldsymbol \\mu, \\boldsymbol \\Sigma)}{f_{X}(x \\mid \\mu_1, \\sigma_{X})}\\ dy\\\\\n& = \\int_{\\mathcal Y}y\\cdot \\frac{\\exp\\left(-\\frac{1}{2}([x,y]' - \\boldsymbol \\mu)'\\boldsymbol\\Sigma^{-1}([x,y]' - \\boldsymbol \\mu)\\right)/\\sqrt{(2\\pi)^k\\det(\\boldsymbol\\Sigma)}}{\\exp[-(x-\\mu_X)^2/2\\sigma^2]/\\sqrt{2\\pi\\sigma_X^2}}\\ dF_Y\\\\\n&\\vdots\\\\\n& = \\mu_Y + \\frac{\\sigma_{Y}}{\\sigma_{X}}\\rho(x - \\mu_X)\n\\end{align*}\nIf we substitute in our parameters, and the calculated correlation coefficient of \n$$ \\rho = \\frac{\\cov{X,Y}}{\\sigma_{X}\\sigma_{Y}} = \\frac{1}{4\\sqrt 3} \\approx 0.577,$$\nwe have $$ \\E{Y\\mid X = x} \\approx 68 + \\frac{\\sqrt 6}{\\sqrt 8}\\cdot\\frac{1}{4\\sqrt 3}(x - 68) = 34 + \\frac{1}{2}x.$$\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot53\n#| fig-asp: 1\n#| fig-width: 8\n#| fig-cap: \"The density of a child's height conditioning on their parent's height\"\n#| code-summary: \"Show code which generates figure\"\np1 <- df %>% \n  filter(x %in% c(60, 65, 70, 75) )%>% \n  mutate(p_y = p/dnorm(x, 68, sqrt(8))) %>% \n  ggplot(aes(y, p_y, color = as.factor(x))) + \n  geom_line() +\n  theme_minimal() +\n  labs(color = \"Parents's Height\",\n       x = \"Childs's Height\",\n       y = \"Conditional Density\") +\n  theme(legend.position = \"bottom\")\n\nrho <- (Sigma[1,2])/(sqrt(Sigma[1,1]) * sqrt(Sigma[2,2]))\ns1 <- sqrt(Sigma[1,1])\ns2 <- sqrt(Sigma[2,2])\ndf2 <- data.frame(x = seq(57, 80, length = 1000)) %>% \n  mutate(E_y = mu[2] + rho*(s2/s1)*(x - mu[1]))\n\n\np2 <- df2 %>% ggplot(aes(x,E_y)) + \n  geom_line() +\n  theme_minimal() +\n  labs(x = \"Parents' (Average) Height (in)\",\n      y = \"Conditional Expectation of Child's Height\")\n\nggarrange(p1, p2, ncol = 1)\n```\n\nThe key observation is that the function $\\E{Y \\mid X = x}$ is linear in $x$! If we overlay the line associated with $\\E{Y\\mid X =x}$ on the joint density of $(X,Y)$ we end up with a figure emulating one in @galton1886regression.\n```{r}\n#| code-fold: true\n#| label: fig-plot54\n#| fig-align: center\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"The conditional expectation of a child's height given their parent's height in red, over the joint density of child and parent height. The red lines position in relation to the blue 45° line illustrates regression to the mean\"\n#| code-summary: \"Show code which generates figure\"\ndf <- expand_grid(\n  x = c(seq(57, 80, length = 1000), 60, 65, 70, 75), \n  y = seq(57, 80, length = 1000)\n)\ndf$p <- dmvnorm(df, mu, Sigma)\n\nggplot(df, aes(x, y, z = p)) +\n  geom_hline(yintercept = 68, linetype = \"dashed\", size = 0.4) +\n  geom_vline(xintercept = 68, linetype = \"dashed\", size = 0.4) +\n  geom_contour(bins = 20, color = \"black\") +\n  theme_minimal() +\n  labs(x = \"Parents' (Average) Height (in)\", y = \"Child's Height (in)\") +\n  geom_abline(intercept = 34, slope = 1/2, color = \"red\") +\n  geom_abline(intercept = 0, slope = 1, color = \"blue\") +\n  annotate(\"text\", label = \"E[Y|X = x]\",x = 75.5, y = 34 + 76/2 - 1, size = 4, colour = \"red\") +\n  annotate(\"text\", label = \"X = x\",x = 75, y = 74, size = 5, colour = \"blue\")\n```\nOn average, children with tall parents tend to be shorter than their parents. Conversely, children with short parents tend to be taller than their parents. In other words, as shown by the lines superimposed on $f_{X,Y}$, $\\E{Y\\mid X = x} < x$ when $x > \\E{X}$ and $\\E{Y\\mid X = x} > x$ when $x < \\E{X}$.\n:::\n\n       This phenomenon is known as **_regression to the mean_**, and it lends its name to the practice of relating $Y$ to $X$. The ideas from @galton1886regression were extended by one of Galton's students in @pearson1903laws, who actually uses the term \"regression line\" in reference to the function $\\E{Y\\mid X}$.\n\n::: {.remark}\nIt behooves one to acknowledge that Francis Galton's motivation for studying height among parents and children stemmed from his interest in genetics and Darwinism. He was an early proponent of eugenics, and even coined the term \"eugenics\". He referred to regression to the mean as \"regression to mediocrity\", and believed this should be avoided by selective reproduction. Many of Galton's beliefs are classic examples of scientific racism.\n:::\n\n       Let's abstract from the example of height. Suppose we have $(Y, \\mathbf X)\\sim F_{Y,\\X}$ for some **_dependent variable_** $Y$ (with sample space $\\mathcal Y$) and a vector of **_independent variables/explanatory variables/covariates/regressors_** $\\X$ (with sample sapce $\\mathcal X$). If we want to explore the relationship between $Y$ and $\\X$, one measure of interest is the conditional expectation of $Y$ given $\\X$. If we know $\\X$ takes on the value $\\x$, then on average, what is the value of $Y$?\n$$ \\E{Y\\mid \\X = \\x} = \\int_{\\mathcal Y}y \\ dF_{Y\\mid \\x} = \\int_{\\mathcal Y}y\\cdot f_{Y\\mid \\x}(y\\mid \\x) \\ dy = \\int_{\\mathcal Y}y\\cdot\\frac{f_{Y, \\X}(y,\\x)}{f_{\\X}(\\x)}\\ dy$$ This conditional expectation maps values from the sample space of $\\X$ to the sample space for $Y$. In this sense, $\\E{Y\\mid \\X = \\x}$ is a function mapping $\\mathcal X \\mapsto \\mathcal Y$. $\\E{Y\\mid \\X = \\x}$ *is not* a function of $y$, as it is calculated via integrating over all values of $y\\in\\mathcal Y$. Following @angrist2008mostly and @hansen2022econometrics, we name this function.\n\n:::{#def-}\nIf $(Y, \\mathbf X)\\sim F_{Y,\\X}$, then the <span style=\"color:red\">**_conditional expectation function (CEF)_**</span> $\\hat Y:\\mathcal X \\to \\mathcal Y$ is defined as \n$$\\hat Y(X) = \\E{Y\\mid \\X}. $$\nThe CEF is an expectation, so observations of $Y$ are bound to deviate from it. We will define this deviation as the <span style=\"color:red\">**_CEF error_**</span> $\\varepsilon_{c} = Y - \\hat Y(X)$.\n:::\n\nIn the height example, $\\varepsilon_{c}$ captured how much a child's height differed from the trend given by $\\E{Y\\mid \\X}$.\n\n:::{#prp-ceferr}\n\n## Properties of CEF Error\n\nThe CEF error is:\n\n1) Mean independent of $\\X$, $\\E{\\varepsilon_{c}\\mid\\X} = 0$;\n2) Uncorrelated with $\\X$, $\\E{\\varepsilon_{c}\\X} = \\zer$;\n3) Uncorrelated with any function $h(\\X)$, $\\E{\\varepsilon_{c} h(\\X)} = 0$ \n:::\n\n:::{.proof}\n\\begin{align*}\n\\E{\\varepsilon_{c}\\mid\\X} &= \\E{Y - \\hat Y(X)\\mid \\X}\\\\\n& =  \\E{Y - \\E{Y\\mid \\X} \\mid \\X} \\\\\n& = \\E{Y\\mid \\X} - \\E{\\E{Y\\mid \\X} \\mid \\X} & (\\E{\\cdot | \\X}\\text{ linear})\\\\\n& = \\E{Y\\mid \\X} - \\E{Y\\mid \\X} & (\\text{Law of Iterated Expectations})\\\\\n& = 0.\n\\end{align*}\n$\\X$ and $\\varepsilon_{c}$ being uncorrelated is a consequence of mean independence. For some $h(\\X)$, we have \n\\begin{align*}\n\\E{\\varepsilon_{c} h(\\X)} & = \\E{\\varepsilon_{c} h(\\X) \\E{\\varepsilon_{c}\\mid\\X}} & (\\text{Law of Iterated Expectations})\\\\\n& = \\E{\\varepsilon_{c} h(\\X)\\cdot 0} & (\\E{\\varepsilon_{c}\\mid\\X} = 0)\\\\\n& = \\E{0}\\\\\n& = 0.\n\\end{align*}\n<span style=\"color:white\">space</span>\n:::\n\n       We *are not* assuming that $\\E{\\varepsilon_{c}\\mid\\X} = 0$. This equality holds by the definition of the CEF. \n\n       So why restrict our attention to the CEF? Perhaps there are other functions $g:\\mathcal X\\to\\mathcal Y$ which is better at predicted $Y$ than $\\hat Y(\\X)$. It turns out that $\\hat Y(\\X)$ is the function which minimizes the MSE which arises from predicted $Y$.\n\n:::{#prp-}\n\n## CEF Minimizes MSE\n\nFor some arbitrary $g:\\mathcal X\\to\\mathcal Y$,\n$$ \\hat Y(\\X) = \\E{Y\\mid \\X} = \\argmin_{g}\\E{(Y-g(\\X))^2}.$$\n:::\n\n:::{.proof}\n\\begin{align*}\n\\E{(Y-g(\\X))^2} & = \\E{(Y-g(\\X) + 0)^2}\\\\\n& = \\E{(Y-g(\\X) + (\\E{Y\\mid \\X} - \\E{Y\\mid \\X}))^2} & (0 = \\E{Y\\mid \\X} - \\E{Y\\mid \\X})\\\\\n& = \\E{(Y - \\E{Y\\mid \\X}) + (\\E{Y\\mid \\X} - g(\\X)))^2}\\\\\n& = \\E{(Y - \\E{Y\\mid \\X})^2 + 2(Y - \\E{Y\\mid \\X})(\\E{Y\\mid \\X} - g(\\X)) + (\\E{Y\\mid \\X} - g(\\X))^2}\\\\\n& = \\E{(Y - \\E{Y\\mid \\X})^2} + 2\\E{(Y - \\E{Y\\mid \\X})(\\E{Y\\mid \\X} - g(\\X)) } + \\E{(\\E{Y\\mid \\X} - h(\\X))^2}\\\\\n& = E{(Y - \\E{Y\\mid \\X})^2} + 2\\E{\\varepsilon_{c}(\\E{Y\\mid \\X} - g(\\X)) } + \\E{(\\E{Y\\mid \\X} - g(\\X))^2} & (\\varepsilon_{c} = Y - \\E{Y\\mid \\X})\n\\end{align*} \nIf we define $h(\\X) = \\E{Y\\mid \\X} - g(\\X)$, we can use the fact that $\\varepsilon_{c}$ is uncorrelated with any function of $\\X$. \n\\begin{align*}\n\\E{(Y-g(\\X))^2} & = E{(Y - \\E{Y\\mid \\X})^2} + 2\\E{\\varepsilon_{c} h(\\X)} + \\E{(\\E{Y\\mid \\X} - g(\\X))^2}\\\\\n\\E{(Y-g(\\X))^2} & = E{(Y - \\E{Y\\mid \\X})^2} + 2\\cdot 0 + \\E{(\\E{Y\\mid \\X} - g(\\X))^2} & (\\E{\\varepsilon_{c} h(\\X)} = 0)\\\\ \n\\E{(Y-g(\\X))^2} & = E{(Y - \\E{Y\\mid \\X})^2} + \\E{(\\E{Y\\mid \\X} - g(\\X))^2}\n\\end{align*} \nOnly the second term includes the variable we are minimizing over, so \n$$ \\argmin_{h}\\E{(Y-g(\\X))^2} =\\argmin_{h}\\left\\{E{(Y - \\E{Y\\mid \\X})^2} + \\E{(\\E{Y\\mid \\X} - g(\\X))^2}\\right\\} = \\argmin_h \\E{(\\E{Y\\mid \\X} - g(\\X))^2},$$ where $\\E{(\\E{Y\\mid \\X} - g(\\X))^2} \\ge 0$ because we are squaring a quantity. If we take $g(\\X) = \\hat Y(X) = \\E{Y\\mid \\X}$, we have \n$$ \\E{(\\E{Y\\mid \\X} - g(\\X))^2} = \\E{(\\E{Y\\mid \\X} - \\E{Y\\mid \\X})^2} = \\E{0}=0.$$ Therefore the CEF does minimize the MSE in question. \n:::\n\n       This results makes the CEF the optimal candidate for predicting $Y$ given $\\X = \\x$ in a decision theoretic sense (taking the loss function to be quadratic), but in practice we don't actually know the precise form of the CEF. When $(X,Y) \\sim N(\\boldsymbol \\mu, \\Sig)$, we saw the CEF is linear, but this needn't be the case.  \n\n:::{#exm-}\nDefine the following density on the sample space $\\mathcal X\\times \\mathcal Y = [0,2]\\times[2,4]$: \n\n$$f_{X,Y}(x,y)=\\frac{1}{8}(6-x-y)$$\nThe marginal density of $X$ is \n$$ f_X(x) = \\int_{\\mathcal Y}f_{X,Y}(x,y)\\ dy = \\int_2^4\\frac{1}{8}(6-x-y)\\ dy = \\frac{1}{8}(6-2x),$$ and the conditional density of $Y\\mid X = x$ is \n$$ f_{Y\\mid x}(y\\mid x) = \\frac{f_{X,Y}(x,y)}{f_{X}(x)} = \\frac{\\frac{1}{8}(6-x-y)}{\\frac{1}{8}(6-2x)} = \\frac{6-x-y}{6-2x}$$ Using this to calculate the expectation $\\E{Y \\mid X = x}$ gives\n$$\\E{Y \\mid X = x} = \\int_{\\mathcal Y} y\\cdot f_{Y\\mid x}(y\\mid x)\\ dy= \\int_2^4 y\\frac{6-x-y}{6-2x}\\ dy = \\frac{26-9x}{9-3x}.$$\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot55\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"A nonlinear CEF function\"\n#| code-summary: \"Show code which generates figure\"\ntibble(x = seq(0, 2, length = 1000)) %>% \n  mutate(y = (-9*x + 26)/(-3*x + 9)) %>% \n  ggplot(aes(x, y)) + \n  geom_line() +\n  labs(x = \"x\", y = \"Conditional Expectation of Y given x\") +\n  theme_minimal()\n```\n:::\n\n       In order to give the CEF some form, we will approximate it with a linear function (which may hold for certain $f_{\\X,Y}$):\n$$\\E{Y\\mid \\X } =  \\X\\bet.$$ Henceforth, we will assume that $\\X$ includes a column of 1's such that $\\X\\bet$ includes an intercept term. We will take the coefficient $\\bet$ to be that which gives the best linear prediction of $Y$ given $\\X$.\n$$ \\bet = \\argmin_{\\mathbf{b}}\\E{(Y-\\X\\mathbf b)^2}$$\nThe error associated with this projection is the <span style=\"color:red\">**_linear projection error_**</span>,\n$\\varepsilon_{\\ell} =  Y-\\X\\mathbf b$. The linear projection error is not the same as the conditional expectation error. It is only the case that $\\varepsilon_{\\ell} = \\varepsilon_c$ if the CEF is truly linear. \n\n       Taking the definition of $\\bet$ to be a parameterization, we can define our first model. We'll follow the naming convention of @hansen2022econometrics.\n\n:::{#def-cefdef}\nThe <span style=\"color:red\">**_linear projection (CEF) model_**</span> is defined as $\\mathcal P_\\text{LP} = \\{P_\\bet \\mid \\bet \\in \\mathbb R^{k+1}\\}$, where \n\\begin{align*}\nP_\\bet &= \\{F_{\\X,Y} \\mid \\E{Y\\mid \\X}= \\X\\bet \\},\\\\\n\\bet &= \\argmin_{\\mathbf{b}}\\E{(Y-\\X\\mathbf b)^2},\\\\\n\\X & = (1, X_2, \\ldots, X_K).\n\\end{align*}\n:::\n\n       This model is not regular, as each element $P_\\bet$ is itself a collection of distributions. As the following example highlights, it won't be possible to identify the underlying $F_{\\X,Y}$, only $\\E{Y\\mid \\X}$. Consequently, each element of $\\mathcal P_\\text{LP}$ is a collection of distributions with a common $\\E{Y\\mid \\X}$.\n\n:::{#exm-}\n\n## Exercise in Identification\n\nSuppose $(X,Y)\\sim N(\\boldsymbol \\mu, \\Sig)$. In this case, the CEF is actually linear and given as \n$$\\E{Y\\mid X} = \\mu_Y + \\frac{\\sigma_{Y}}{\\sigma_{X}}\\rho(x - \\mu_X).$$ We can define *many* normal distributions with a common CEF. For example, if we have $\\rho = \\mu_x = \\mu_y = \\rho' = \\mu_x' = \\mu_y' = 1$, $\\sigma_X = 1$, $\\sigma_Y = 2$, $\\sigma_X' = 2$, and $\\sigma_Y' = 4$, then \n$$\\mu_Y + \\frac{\\sigma_{Y}}{\\sigma_{X}}\\rho(x - \\mu_X) = \\mu_Y' + \\frac{\\sigma_{Y}'}{\\sigma_{X}'}\\rho'(x - \\mu_X') = \\frac{1}{2} +x.$$ This means that $\\bet = (1/2,1)$ for both distributions.\nThis problem is reminiscent of systems of equations in that we have so many more variables than equations, that there are infinite possibilities (**_remember this_**). This is also just the tip of the iceberg when considering how many elements are included in $P_{(1/2,1)}$. It isn't just all the Gaussian distributions where the CEF is $\\frac{1}{2} +x$. It isn't all the distributions with a linear CEF which is $\\frac{1}{2} +x$. It is all the distributions for which the best linear approximation of the CEF is $\\frac{1}{2} +x$ (which happens to include the previous groups). Is this an issue? Well not really. We aren't concerned with the joint distribution $F_{\\X,Y}$, as the only thing with any bearing on prediction here is $\\E{Y\\mid \\X}$ (we made no assumptions about $F_{\\X,Y}$ when proving that the CEF minimizes MSE). In the event we did want to identify $F_{\\X,Y}$, we would need to impose additional assumptions on $\\mathcal P_\\text{LP}$. Consider the following assumptions:\n\n1. $(X,Y)\\sim N(\\boldsymbol \\mu, \\Sig)$\n2. $\\mu_X = 0$\n3. $\\sigma_X = \\sigma_Y = 1$\n\nIn this case, $$\\E{Y\\mid X} = \\mu_Y + \\rho x = \\mu_Y + \\frac{\\cov{X,Y}}{\\underbrace{\\sigma_X \\sigma_Y}_{1\\cdot 1}}x = \\underbrace{\\mu_Y}_{\\beta_1} +\\underbrace{\\cov{X,Y}}_{\\beta_2}x,$$\n Assuming $(X,Y)\\sim N(\\boldsymbol \\mu, \\Sig)$, $\\mu_X = 0$, and $\\sigma_X = \\sigma_Y = 1$, it must be the case that\n\n\\begin{align*}\n(X,Y) &\\sim N(\\boldsymbol \\mu, \\boldsymbol \\Sigma),\\\\\n\\boldsymbol \\mu & = [0, \\beta_1]',\\\\\n\\boldsymbol \\Sigma & = \\begin{bmatrix}1 & \\beta_2\\\\ \\beta_2 & 1\\end{bmatrix}.\n\\end{align*}\n:::\n\n       Now we can turn to the question of identifying $\\bet$.\n\n:::{#prp-}\nIf $\\E{\\X\\X'}$ is invertible, then the parameter $\\bet$ is identified in the linear projection (CEF) model. \n:::\n\n:::{.proof}\nWe must show that $\\bet = \\bet'$, then is it necessarily the case that $P_\\bet = P_{\\bet'}$. By the definition of the linear projection (CEF) model, it suffices to show that $\\argmin_{\\mathbf{b}}\\E{(Y-\\X\\mathbf b)^2}$ has a solution, and that the solution is unique. \n\\begin{align*}\n\\bet &= \\argmin_{\\mathbf{b}}\\E{(Y-\\X\\mathbf b)^2}\\\\\n& = \\argmin_{\\mathbf{b}}\\E{Y^2 + 2\\mathbf b(\\X'Y) + (\\X\\mathbf b)'(\\X\\mathbf b)}\\\\\n& = \\argmin_{\\mathbf{b}} \\left\\{\\E{Y^2} + 2\\mathbf b\\E{\\X'Y} + 2\\mathbf b'\\E{\\X'\\X}\\mathbf b)\\right\\}\n\\end{align*}\nThe first order condition associated with this problem is \n$$ 2\\E{\\X'Y} + 2\\E{\\X'\\X} \\bet = \\zer.$$ This is equivalent to \n$$\\E{\\X'Y} = \\E{\\X'\\X} \\bet.$$ We now use the assumption that $\\E{\\X'\\X}$ is invertible to solve for a unique solution for $\\bet$:\n$$ \\bet = \\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}.$$\nTherefore, $\\bet$ is identified.\n:::\n\n       To illustrate how the assumption that $\\E{\\X'\\X}$ is invertible leads to identification, consider what happens when it does not hold. In $\\E{\\X'\\X}$ is not invertible, than $\\X'\\X$ does not have full rank\nand has infinite solutions. Suppose we have:\n\\begin{align*}\n\\E{\\X'Y} & = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}.\\\\\n\\E{\\X'\\X} & = \\begin{bmatrix} 1 & 1\\\\ 0 & 0 \\end{bmatrix}.\n\\end{align*}\nIn this case\n\\begin{align*}\n&\\E{\\X'Y} = \\E{\\X'\\X} \\bet\\\\\n\\implies &\\begin{bmatrix} 1 & 1\\\\ 0 & 0 \\end{bmatrix}\\begin{bmatrix} \\beta_1 \\\\ \\beta_2 \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}\\\\\n\\implies & \\beta_1 + \\beta_2 = 1.\n\\end{align*}\nThis final equation has an infinite number of solutions. If two of those solutions happen to be $\\bet$ and $\\bet'$, then $P_{\\bet,\\Sig} = P_{\\bet'}$ despite  $\\bet\\neq\\bet'$.\n\n## Structural Models and *The* Linear Model\n\n       The CEF approach to regression aims to describe a characteristic of the joint density $f_{Y,\\X}$. It captures an association between variables, but not a causal link. Econometricians are often concerned with causal links to inform economic policy, something which differentiates econometrics from statistics. This is why the approach to linear regression seen in standard econometrics sources such as @greene2003econometric, @wooldridge2010econometric, @hayashi2011econometrics, @wooldridge2015introductory, and @stock2003introduction take a **_structural_** approach to linear regression. Before giving a heuristic definition of \"structural\", let's consider an example due to  @reiss2007structural and inspired @cobb1928theory.  \n\n:::{#exm-}\nAssume a firms output $Y$ is related to labor input $L$ and capital input $K$ according to $$Q = AL^{\\beta}K^{\\alpha}.$$ The total factor of productivity is $A$, while $L$ and $K$ are the elasticity of output with respect to labor and capital, respectively. The production function can be written as \n$$ \\log Q = \\log A + \\beta \\log L + \\alpha \\log K.$$ Now consider the linear regression:\n$$ \\log Q = \\log A + \\beta \\log L + \\alpha \\log K + \\varepsilon$$ where $\\varepsilon$ is an error addressing the fact that the linear relationship may not hold perfectly. In this case are $(\\log A, \\alpha, \\beta)$ associated with the best linear projection of $\\log Q$ onto $\\log L$ and $\\alpha \\log K$, or do they correspond to the factor of productivity, and elasticities of output? If the latter is the case, then what does $\\varepsilon$ represent in the context of the deterministic theoretical relationship $Q = AL^{\\beta}K^{\\alpha}$? It will turn out that for the coefficients of the best linear projection to coincide with the economic interpretation from $Q = AL^{\\beta}K^{\\alpha}$, we will need to impose assumptions about $\\varepsilon$, a step that is one of the defining features of econometrics. \n:::\n\n       The key difference between this example and the height example from @galton1886regression's is that we are now trying to root our linear regression in structure provided by economic theory/intuition, as to enable us to make economic conclusions. Philip Haile distinguishes these approaches in an excellent set of [slides](http://www.princeton.edu/~reddings/tradephd/Haile_theorymeas.pdf). He would classify @galton1886regression's work as descriptive as it \"estimates relationships between observables\". This is opposed to a structural approach which \"estimates features of a data generating process (i.e, a model) that are (assumed to be) invariant to the policy changes or other counterfactuals of interest.\" This difference is also linked to the error in the linear regression, $\\varepsilon$. As put by @reiss2007structural:\n\n>Where did the error term in the empirical model come from? The\n>answer to this question is critical because it affects whether...\n>the parameters of the Cobb–Douglas production function [are identified], as opposed to\n>the parameters of the best linear predictor of the logarithm of\n>output given the logarithms of the two inputs [being identified]. In other words, it is the combination of\n>an economic assumption (production is truly Cobb–Douglas) and statistical assumptions ($\\varepsilon$ \n>satisfies certain moment conditions) that distinguishes a structural model from\n>a descriptive one.\n\n       In an effort to beat a dead horse, a final definition of a structural model is due to @goldberger1972structural, who simply puts \"By structural equation models, I refer to stochastic models in which each equation represents a causal link, rather than a mere empirical association.\" None of this is to say that descriptive model is not useful. Just like descriptive statistics give insight into data, a descriptive model (such as the linear projection model) is an excellent way to investigate data, and findings may inform the development of a structural model.     \n\n       Let's now reintroduce linear regression from a structural perspective. We will do so with no assumptions about our model, and amend our definition as we determine which assumptions are required for identification and desirable properties of estimators. The goal of this approach is to emphasize that the assumptions associated with an econometric model aren't set in stone from the onset. You begin with little to no assumptions, and then determine which assumptions are necessary as you analyze the model and accompanying estimators. \n\n       We have a vector of $K$ regressors $\\X = [X_1,\\ldots,X_K]$ (assuming $X_1 = 1$ to allow for an intercept), structural parameters $\\bet = [\\beta_1,\\ldots,\\beta_n]'$ , and some structural error term $\\varepsilon$. The density underlying the model is the joint density between regressors and the error $f_{\\X,\\varepsilon}$. The independent variable $Y$ is given as\n$$ Y = \\X\\bet + \\varepsilon.$$ The major difference between this and the linear projection model is the underlying density for the latter is $f_{\\X,Y}$ where $\\bet$ and $\\varepsilon$ are defined using this density. Now we're determining $Y$ via some structural parameter $\\bet$ and the density $f_{\\X,\\varepsilon}$. There are many situations in which the realizations of $\\varepsilon$ may not be identically, or independently, distributed, so we need to consider the joint density of $\\ep = (\\varepsilon_1, \\ldots, \\varepsilon_n)$ where our sample is size $n$. This joint density is $f_{\\ep}$. The underlying density from which we draw regressors and errors *is not* $f_{\\X,\\ep}$, as a realization from this distribution would be comprised of $K$ regressors and $n$ errors. What we need is the joint density of $\\ep$ and $n$ observations of $\\X$, so we need to consider the following random matrix:\n$$\\Xm = \\begin{bmatrix}\\X_1 \\\\ \\vdots \\\\ \\X_i \\\\ \\vdots\\\\ \\X_n\\end{bmatrix}$$ A sample of $n$ observations of $K$ regressors $\\X$ and errors $\\ep$ is a single realization drawn from the density $f_{\\Xm,\\ep}$.\n\n$$ \\Y = \\Xm\\bet + \\ep = \\begin{bmatrix}  \\X_1\\bet + \\varepsilon_1 \\\\ \\vdots \\\\ \\X_i\\bet + \\varepsilon_i \\\\ \\vdots \\\\  \\X_n\\bet + \\varepsilon_n  \\end{bmatrix} = \\begin{bmatrix}  \\beta_0 + \\beta_1X_{21}  + \\cdots +\\beta_KX_{K1}+ \\varepsilon_1 \\\\ \\vdots \\\\ \\beta_0 + \\beta_1X_{2i}  + \\cdots +\\beta_KX_{Ki}+ \\varepsilon_i  \\\\ \\vdots \\\\  \\beta_0 + \\beta_1X_{2n}  + \\cdots +\\beta_KX_{Kn}+ \\varepsilon_n  \\end{bmatrix}$$\n       We could also write $\\Xm$ as $K$ column vectors of length $n$, each corresponding to the $n$ observations of each regressor.\n$$\\Xm = \\begin{bmatrix}\\X_1 & \\cdots & \\X_j & \\cdots& \\X_K\\end{bmatrix}.$$ To distinguish between $\\X_i$ (one observation of $K$ regressors) and $\\X_j$ ($n$ observations of one regressor), we will use the indices $i$ and $j$, respectively.^[Later on we may index observations by different letters depending on context. For instance if our data is a time series we'll index observations with $t$.] We will assume that our data is the result of a random sample of observations of regressors $\\X_i$:\n$$ f_{\\Xm}=\\textstyle\\prod_{i=1}^n f_{\\X_i}.$$ The random sample assumption is essential as it will allow us to apply the LLN and CLT.\nFinally, we introduce a parameter which dictates the variance of the error $\\ep$. This will be the PSD matrix $\\Sig = \\var{\\ep\\mid\\Xm}$. Now we can define the linear model in the absence of assumptions.\n\n:::{#def-}\nThe <span style=\"color:red\">**_linear model_**</span> is defined as $\\mathcal P_\\text{LM} = \\{P_{\\bet,\\Sig} \\mid \\bet \\in \\mathbb R^{K},\\ \\Sig \\in \\mathbb R^{n\\times n} \\}$, where \n\\begin{align*}\nP_{\\bet,\\Sig} &= \\{F_{\\Xm,\\ep} \\mid \\Y= \\Xm\\bet +\\ep,\\ \\Sig  = \\var{\\ep\\mid\\Xm},\\ f_{\\Xm}=\\textstyle\\prod_{i=1}^n f_{\\X_i} \\},\\\\\n\\Xm & = [\\X_1, \\cdots, \\X_j, \\cdots \\X_K] = [\\X_1, \\cdots, \\X_i, \\cdots \\X_n]',\\\\\n\\Y & = [Y_1, \\ldots, Y_n],\\\\\n\\ep & = [\\varepsilon_1, \\ldots, \\varepsilon_n]\\\\\n\\end{align*}\n:::\n\n       When discussing a model  $P_{\\bet,\\Sig}\\in\\mathcal P_\\text{LM}$, **we are implicitly assuming that the specification of the model is correct, and regressors are IID**. If the model were not linear than $P_{\\bet,\\Sig}\\notin\\mathcal P_\\text{LM}$, which is not our focus at the moment, but is a legitimate concern. \n\n       In the context of a structural linear model, $\\ep$ is not simply an approximation error. In introduces a stochastic element to a deterministic economic model. @reiss2007structural enumerate four ways that this randomness can be introduced. We will explore these in the context of the Cobb-Douglas production model where $\\log Q_i = \\log A + \\beta \\log L_i + \\alpha \\log K_i + \\varepsilon$ for an observation from firm $i$.\n\n1. We may be uncertain about the economic environment at hand.\n2. Agent uncertainty about the economic environment;\n3. Optimization errors on the part of economic agents;\n4. Measurement errors in observed variables.\n\n:::{#exm-car}\nSuppose an agent is deciding between purchasing two cars ($j=1,2$) has a linear utility function $u_{ij} = \\X_{ij}\\bet$. The vector $\\x_{ij}$ are attributes of car $j$ (size, mpg, make, model, etc.). We do observe their choice of vehicle $y_i$, but cannot observe their utility from the respective vehicles. Assuming agents maximize their utility, then their choice can be defined as \n$$y_i = \\begin{cases}\\text{car }1& u_{i1} \\ge u_{i2}\\\\ \\text{car }2& u_{i2} > u_{i1} \\end{cases}.$$ \nHow would we incorporate $\\varepsilon$ into our model? In the linear model the error directly affects the dependent variable, but in this case the (presumable) dependent variable $y_i$ is an indicator. It doesn't make sense to add a stochastic element to it, as we observe a customer's choice with no uncertainty.   \n\n1. People are inherently heterogeneous in the utility they receive from any product. One agent may live in a city with access to public transit and would not gain much utility from a car, while another agent may live in a rural area and rely on a car to commute to work and run errands. The error term $\\varepsilon_i$ could correct for these differences. It also could be the case that the error is specific to a consumer *and* a particular vehicle $j$. Maybe consumer $i$'s is particularly loyal to the manufacturer of car $j$ and they receive more utility as a result. This could be captured with an error $\\varepsilon_{ij}$.\n2. An agent may be not have the opportunity to test drive each car before purchasing, so their is some uncertainty as to how much utility they would receive from purchasing it. This uncertainty could be incorporated via $\\varepsilon_{ij}$.\n3. An agent may not be perfectly rational and could make a mistake while attempting to maximize their utility. They could purchase car $j=2$ despite the fact that $u_{i1} \\ge u_{i2}$. To correct for this miscalculation, we could include an error $\\varepsilon_{ij}$ such that $u_{i1} + \\varepsilon_{i1} \\le u_{i2} + \\varepsilon_{i2}$\n4. We may not be able to perfectly measure all the variables in the model. If one of the attributes in the vector $\\x_{ij}$ is price, but we only observe MSRP, then we aren't accounting for the fact that some customers may have purchased their car for a lower price (it could be used, or on sale). This measurement error can be accounted for with $\\varepsilon_{ij}$\n\nIt's important to notice how the error term is indexed in each example. Sometimes the error arises because of the agent $i$ ($\\varepsilon_i$), or the agent and the specific car ($\\varepsilon_{ij}$). There could also be ways to incorporate an error that is specific to each car, but not agents ($\\varepsilon_j$). Later on in Section \\@ref(binary-choice) we will talk about how to estimate models like one.\n:::\n\n       The precise interpretation of $\\ep$ is key if we want to justify the statistical assumptions about $\\ep$ which @reiss2007structural cite as a key player in identification. \n\n::: {.remark}\nAnother classical assumption of linear regression that we have explicitly violated is that $\\Xm$ is a matrix of constants. In certain settings researchers are able to determine the values before collecting data. For instance, in a laboratory setting you may have enough control over the (observed/sampled) regressors  as to be able to record the value of $\\Y$ at predetermined realizations of $\\Xm$. This is rarely the case in social sciences, the realm in which econometrics exists. For this reason, we treat $\\Xm$ as random, and the case of fixed regressors as a special case. In practice, this means we need to condition on $\\Xm$ when considering expectations and variances of quantities related to $\\Xm$.  \n:::\n\n       Is it still the case that $\\bet$ is identified when $\\E{\\X'\\X}$ is invertible? It turns out that we will need an additional assumption that we got \"for free\" with the CEF model via Proposition \\@ref(prp:ceferr), that being that $\\ep$ and $\\X$ are uncorrelated. \n\n:::{#def-}\nThe covariates $\\X$ satisfy the <span style=\"color:red\">**_orthogonality condition_**</span> if $\\E{X_i\\varepsilon_i} = 0$. In matrix form this is \n$$\\E{\\X'\\ep} = \\zer.$$ Equivalently,^[Technically this equivalency only holds if $\\beta_0\\neq 0$.] $\\X$ is orthogonal to $\\ep$ if:\n\\begin{align*}\n\\E{\\ep} &= \\zer \\\\\n\\cov{\\X,\\varepsilon_i}&=0 & (i=1,\\ldots,n).\n\\end{align*}\nIf this assumption fails, we say $\\X$ is <span style=\"color:red\">**_endogenous_**</span>. \n:::\n\n       This is the precise type of assumption that @reiss2007structural referred to when talking about the role $\\varepsilon$ plays in structural models. If $\\X_1$ is the column of 1s associated with the intercept $\\beta_1$, then $\\E{\\X_1\\ep} = 0$.\n\n:::{#exm-endogex}\n\n## Endogeneity\n\nA classic example in econometrics due to labor economists is estimating the impact that education has on earnings. An early paper to consider this was @griliches1972education, @card1995using is perhaps the most famous attempt at estimating this effect (@card1999causal and @card2001estimating  reviews similar studies and survey approaches to this problem). Economic intuition tells us that the more schooling someone receives, the higher their earnings/salary will be. Professions that are associated with high salaries often require (or are associated with) graduates degrees: doctors need an MD, lawyers need a JD, and business executives often have MBAs. On the opposite side of the spectrum, many white collar jobs require a college diploma, so only having a high school diploma limits a prospective employee's ability to qualify for certain jobs which traditionally have higher pay. This observation leads us to posit the deterministic relationship:\n$$\\log(income_i) = \\beta_1 + \\beta_2\\cdot educ_i,$$ where $income_i$ is an agent $i$'s annual income and $educ_i$ is years of post-secondary education (we will operate under the assumption that every agent has a high school diploma). There are, of course, other factors impacting earnings (work experience, profession, location of residence, etc.) that are readily observable, but for the purpose of the example we will ignore those. There are of course exceptions to this deterministic relationship. Bill Gates and Mark Zuckerberg both only have high school diplomas,^[Okay, this is admittedly a bit misleading because both dropped out of Harvard.] but have higher incomes than virtually everyone in the world. To account for this, we introduce the stochastic element $\\varepsilon_i$ to our model.\n$$\\log(income_i) = \\beta_1 + \\beta_2\\cdot educ_i + \\varepsilon_i$$\nIn this case, $\\varepsilon_i$ corresponds to all the other unobservable determinants of earnings. A major unobservable determinant is innate ability. Bill Gates and Mark Zuckerberg make a great deal of money because of their ambition, business acumen, and ability to innovate despite not having a college degree. It's not really possible to measure something abstract like someone's ambition, so the best we can do is incorporate it with $\\varepsilon_i$. Is it the case that $\\E{\\Xm'\\ep} = \\zer$ in this case? Most likely not. In all likelihood $\\E{educ_i\\cdot\\varepsilon_i}\\neq 0$, because people who are ambitious and have an innate ability to innovate tend to pursue higher education to further their abilities. If this hypothesis is true, then $educ_i$ is endogenous. \n:::\n\nWe also can give a name to the assumption that $\\E{\\X'\\X}$ is invertible. \n\n:::{#def-}\nThe covariates $\\X$ exhibit  <span style=\"color:red\">**_(perfect) multicollinearity_**</span> if $$\\text{rank}\\left(\\E{\\X'\\X}\\right) = K,$$ which is equivalent to $\\E{\\X'\\X}$ failing to be invertible.\n:::\n\nIn the event that $\\E{\\X'\\X}$ is not invertible, then there exists some linear dependence between the set of covariates $(1,X_1,\\ldots,X_k)$, i.e one regressor is a linear function of another. These two assumptions insure that $\\bet$ is identified for $\\mathcal P_\\text{LM}$.\n\n:::{#thm-}\n\n## Identification of the Linear Model\n\nIf $\\X$ is orthogonal to $\\ep$ and does not exhibit multicollinearity, then $(\\bet, \\Sig)$ are identified for the linear model $\\mathcal P_\\text{LM},$ and $\\beta$ given as \n$$\\bet = \\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}.$$\n:::\n\n:::{.proof}\nOrthogonality gives  \n\\begin{align*}\n&\\E{\\X'\\ep} = \\zer\\\\\n\\implies & \\E{\\X'(Y-\\X\\bet)} = \\zer & (\\ep = (Y-\\X\\bet))\\\\\n\\implies & \\E{\\X'Y}-\\bet\\E{\\X'\\X}= \\zer\\\\\n\\implies & \\E{\\X'Y} = \\bet\\E{\\X'\\X}.\n\\end{align*}\nWe have also assumed that $\\X$ does not exhibit multicollinearity, so $\\E{\\X'\\X}$ is invertible. This means $\\E{\\X'Y} = \\bet\\E{\\X'\\X}$ has a unique solution in the form of \n$\\bet = \\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}.$ If $\\bet$ is unique, then $\\Sig$ is unique and written as \n$$ \\Sig = \\var{\\ep\\mid\\Xm } = \\var{Y - \\X\\bet\\mid \\Xm} = \\var{Y - \\X\\left[\\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}\\right]\\mid \\Xm }.$$ Therefore, if $(\\bet,\\Sig)\\neq(\\bet',\\Sig')$, then $\\X\\bet + \\ep \\neq \\X\\bet' + \\ep$ and $\\Sig \\neq \\Sig$, so $P_{\\bet,\\Sig}\\neq P_{\\bet',\\Sig'}$, meaning our parameters are identified.\n:::\n\nThe parameter $\\bet$ takes the same analytic form as that of the linear projection (CEF) model, but it's important to remember that they arise from different approaches. We arrived at this form using the relationship between $\\X$ and $\\ep$ in a structural model, not from defining $\\bet$ to be the solution to an optimization problem.\n\n:::{#exm-}\n\n## Multicollinearity\n\nSuppose $Y = 1 + 5 X_1 + 2 X_2 + \\varepsilon$ where $X_1 = 3X_2$ (suppressing the indices $i$ which are not relevant at the moment). This model corresponds to the parameters $\\bet = (1,5,2)$ We can rewrite our model as \n$$ Y = 1 + 5 X_1 + 2 X_2 + \\varepsilon = 1 + 5(3X_2) + 2 X_2 + \\varepsilon = 1 + 0X_1 + 17X_2 + \\varepsilon,$$ so the model also corresponds to parameters $\\bet'=(1,0,17)$, and our model is not identified. \n:::\n\n:::{#exm-}\n\n## Non-Zero Mean Errors\n\nSuppose $Y = 1 + 5 X_1 + 2 X_2 + \\varepsilon$ where $\\E{\\varepsilon} = 3$ and $\\var{\\varepsilon\\mid \\X} = \\sigma^2$. In this case $\\E{\\X'\\ep}\\neq 0$, so we shouldn't expect that $\\bet$ is identified. In particular, we won't be able to identify $\\beta_0$. We can write $\\varepsilon = 3 + \\nu$ for $\\var{\\nu\\mid \\X} = \\sigma^2$, giving \n$$ Y = 1 + 5 X_1 + 2 X_2 + (3 + \\nu) = Y = 4 + 5 X_1 + 2 X_2 + \\nu.$$\nSo the model can be written with parameters $([1,5,2]', \\sigma^2)$ or with parameters $([4,5,2]', \\sigma^2)$. Therefore the model, in particular $\\beta_0$, is not identified. \n:::\n\nWe will consider what happens when $\\E{\\X'\\ep}=0$, how this situation arises, and what can be done about it in Section \\@ref(endogeniety-i-iv-and-2sls). For now, let's update our model with our identifying assumptions \n\n:::{#def-}\nThe **_(identified) linear model_** is defined as $\\mathcal P_\\text{LM} = \\{P_{\\bet,\\Sig} \\mid \\bet \\in \\mathbb R^{K}, \\Sig\\in\\mathbb R^n\\times\\mathbb R^n\\}$,^[We are implicitly assuming $\\beta_1\\neq 0$, which eliminates the need to assume $\\E{\\varepsilon} = \\zer$] where \n\\begin{align*}\nP_{\\bet,\\Sig} &= \\{F_{\\Xm,\\ep} \\mid \\Y= \\Xm\\bet +\\ep, \\ \\ \\Sig  = \\var{\\ep\\mid\\Xm},\\ \\ f_{\\Xm}=\\textstyle\\prod_{i=1}^n f_{\\X_i}, \\ \\text{rank}\\left(\\E{\\X'\\X}\\right) = K,\\ \\E{\\X'\\ep} = \\zer\\},\\\\\n\\Xm & = [\\X_1, \\cdots, \\X_j, \\cdots \\X_K] = [\\X_1, \\cdots, \\X_i, \\cdots \\X_n]',\\\\\n\\Y & = [Y_1, \\ldots, Y_n].\n\\end{align*}\n:::\n\n\n## Ordinary Least Squares \n\nNow that we have identified our model, we can *finally* estimate $\\bet$ using our favorite estimator -- ordinary least squares! There are a handful of ways to derive the ordinary least squares estimator, but for now we will focus on two constructions. \n\nWe want to estimate $\\bet$ using observations of $(\\Y, \\Xm)$, which is the same as saying $n$ observations of $(Y, \\X)$. By definition, we do not observe realizations of $\\ep$. We know that $\\bet =\\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}$, so perhaps we can simply estimate $\\bet$ using the sample analog of $\\left(\\E{\\Xm'\\Xm}\\right)^{-1}\\E{\\Xm'\\Y}$. This approach is sometimes referred to as the **_analogy principle_** (see @goldberger1991course), and will come up again. Denote the sample moments as $\\widehat{\\E{\\X'\\X}}$ and $\\widehat{\\E{\\X'Y}}$. If we have a sample of size $n$, then \n\\begin{align*}\n\\widehat{\\E{\\X'\\X}} & = \\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X\\\\\n\\widehat{\\E{\\X'Y}} & = \\frac{1}{n}\\sum_{i=1}^n\\X_iY_i\n\\end{align*}\nTherefore, our estimator is \n$$\\hat {\\bet}(\\Xm, \\Y) = \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_iY_i\\right).$$ \n\nWe can also write this in the form of matrices. First we need to expand $\\X'\\X$:\n\\begin{align*}\n\\X'\\X  &= \\begin{bmatrix} \\X_1 \\\\ \\vdots \\\\ \\X_K\\end{bmatrix}\\begin{bmatrix} \\X_1 & \\cdots & \\X_K\\end{bmatrix} = \\begin{bmatrix}\\X_1\\cdot\\X_1 & \\X_1\\cdot\\X_2 & \\cdots & \\X_1\\X_K\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\X_K\\cdot\\X_1 & \\X_K\\cdot\\X_2 & \\cdots & \\X_K\\cdot \\X_k\\end{bmatrix} = \\begin{bmatrix}\\sum_{i=1}^n X_{1,i}^2 & \\sum_{i=1}^n X_{1,i}X_{2,i} & \\cdots & \\sum_{i=1}^n X_{1,i}X_{K,i}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\sum_{i=1}^n X_{K,i}X_{1,i} & \\sum_{i=1}^n X_{K,i}X_{2,i} & \\cdots & \\sum_{i=1}^n X_{K,i}^2\\end{bmatrix}\\\\\n\\end{align*}\nThe expectation is taken element-wise where \n\n$$ \\E{\\sum_{i=1}^n X_{j,i}X_{\\ell,i}} = \\sum_{i=1}^n \\E{X_{j,i}X_{\\ell,i}} = n \\E{X_{j,i}X_{\\ell,i}},$$ so applying this to each entry and factoring out the common scalar $n$ gives: \n\n\n\n$$ \\E{\\X'\\X} = n\\begin{bmatrix}\\E{X_1^2} & \\E{X_1X_2} & \\cdots & \\E{X_1X_K}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\E{X_KX_1} & \\E{X_KX_2} & \\cdots & \\E{X_K^2}\\end{bmatrix}.$$\n\nThe sample analog (as a function of random variables, *not* realizations) is \n\\begin{align*}\n\\widehat{\\E{\\X'\\X}} &= n\\begin{bmatrix}n^{-1}\\sum_{i=1}^n X_{1,i}^2 & n^{-1}\\sum_{i=1}^n X_{1,i}X_{2,i} & \\cdots & n^{-1}\\sum_{i=1}^n X_{1,i}X_{K,i}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ n^{-1}\\sum_{i=1}^n X_{K,i}X_{1,i} & n^{-1}\\sum_{i=1}^n X_{K,i}X_{2,i} & \\cdots & n^{-1}\\sum_{i=1}^n X_{K,i}^2\\end{bmatrix}\\\\&=\\begin{bmatrix}\\sum_{i=1}^n X_{1,i}^2 & \\sum_{i=1}^n X_{1,i}X_{2,i} & \\cdots & \\sum_{i=1}^n X_{1,i}X_{K,i}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\sum_{i=1}^n X_{K,i}X_{1,i} & \\sum_{i=1}^n X_{K,i}X_{2,i} & \\cdots & \\sum_{i=1}^n X_{K,i}^2\\end{bmatrix}\\\\\n& = \\begin{bmatrix} \\X_1 \\\\ \\vdots \\\\ \\X_K\\end{bmatrix}\\begin{bmatrix} \\X_1 & \\cdots & \\X_K\\end{bmatrix}\\\\\n & = \\Xm'\\Xm\n\\end{align*}\nWe can perform the analogous inspection on $\\E{\\X'Y}$ and conclude that $\\widehat{\\E{\\X'Y}} = \\Xm\\Y$. Therefore, in matrix form, our estimator is \n$$\\hat {\\bet} =(\\Xm'\\Xm)^{-1}\\Xm\\Y$$ \n\n:::{#exm-}\n\n## The Simple Linear Model\n\nIn the event $K = 2$, we have $Y = \\beta_1 + \\beta_2 X + \\varepsilon$ for a single non trivial regressor $X$. The random vector of regressors is $\\X = [\\mathbf 1, X]$. Let's calculate the population parameters $\\bet$ in this setting.\n\\begin{align*}\n\\E{\\X'\\X} & = \\begin{bmatrix}1 & \\E{X}\\\\\\E{X} & \\E{X^2} \\end{bmatrix}\\\\\n\\E{\\X'\\X}^{-1} & =\\frac{1}{\\underbrace{\\E{X^2} - \\E{X}^2}_{\\var{X}}} \\begin{bmatrix}\\E{X^2} & -\\E{X}\\\\-\\E{X} & 1 \\end{bmatrix} = \\begin{bmatrix}\\E{X^2}/\\var{X} & -\\E{X}/\\var{X}\\\\-\\E{X}/\\var{X} & 1/\\var{X} \\end{bmatrix}\\\\\n\\E{\\X'Y} & = \\begin{bmatrix} \\E{Y} \\\\ \\E{XY} \\end{bmatrix}\\\\\n\\bet & = \\E{\\X'\\X}^{-1}\\E{\\X'Y} = \\frac{1}{\\var{X}} \\begin{bmatrix} \\E{X^2}\\E{Y} -\\E{X}\\E{XY} & -\\E{X}\\E{Y} + \\E{XY} \\end{bmatrix}\\\\\n\\beta_2 &= \\frac{\\E{XY} -\\E{X}\\E{Y}}{\\var{X}} \\\\ &= \\frac{\\cov{X,Y}}{\\var{X}}\\\\\n\\beta_1 & = \\frac{\\E{X^2}\\E{Y} -\\E{X}\\E{XY} }{\\var{X}} \\\\\n      & = \\frac{(\\E{X^2} - \\E{X}^2 + \\E{X}^2)\\E{Y} -\\E{X}\\E{XY} }{\\var{X}}\\\\\n       & = \\frac{(\\var{X}+ \\E{X}^2)\\E{Y} -\\E{X}\\E{XY} }{\\var{X}}\\\\\n       & = \\E{Y} - \\E{X}\\cdot \\frac{\\cov{X,Y}}{\\var{X}}\\\\\n       & = \\E{Y} - \\beta_2\\E{X}\n\\end{align*}\nThe estimator calculated using the analogous moments is the familiar OLS estimator for the simple linear model:\n\\begin{align*}\n\\hat\\beta_2 & = \\frac{\\widehat{\\text{Cov}}(X,Y) }{\\widehat{\\text{Var}}(X)} = \\frac{(1/n)\\sum_{i=1}^n(X_i - \\bar X)(Y_i - \\bar Y)}{(1/n)\\sum_{i=1}^n(X_i - \\bar X)^2} = \\frac{\\sum_{i=1}^n(X_i - \\bar X)(Y_i - \\bar Y)}{\\sum_{i=1}^n(X_i - \\bar X)^2}\\\\\n\\hat\\beta_1 & = \\bar Y - \\hat\\beta_2 \\bar X\n\\end{align*}\n\n:::\n\nAn alternate way of arriving at this estimator is possible by solving the least squares problem that we encountered with the linear projection model.\n\n\\begin{align*}\n\\hat{\\bet} &= \\argmin_{\\mathbf b} \\sum_{i=1}^n (Y_i - \\X_i\\mathbf b)^2\\\\\n  & = \\argmin_{\\mathbf b} \\left\\{(\\Y - \\Xm\\mathbf b)'(\\Y - \\Xm\\mathbf b)\\right\\} \\\\\n  & = \\argmin_{\\mathbf b} \\left\\{ \\Y' \\Y - 2\\Y\\Xm \\mathbf b +\\mathbf b' \\Xm' \\Xm \\mathbf b \\right\\}\n\\end{align*}\nThe first order condition is \n\\begin{align*}\n&-2\\Xm'\\Y + 2\\Xm'\\Xm\\hat{\\bet} = \\zer \\\\\n\\implies &\\hat{\\bet} = (\\Xm'\\Xm)^{-1}(\\Xm\\Y)\n\\end{align*}\nThis is the same estimator we derived with the analogy principle. In order to reference estimates given by our estimator, we'll need to introduce notation for realizations of $(\\Xm, \\Y, \\ep)$, which makes notation even more complicated. The following table presents how we will write realizations of random quantities, along with recapping the notation for $\\mathcal P_{LM}$.\n\n| Random Quantity | Type     | Dimension    | Definition                      | Realization/Observation |\n|-----------------|----------|--------------|---------------------------------|-------------------------|\n| $\\X$            | vector   | $1\\times K$  | dependent variables             | $\\x$                    |\n| $Y$             | variable | $1\\times 1$  | independent variable            | $y$                     |\n| $\\ep$           | vector   | $n\\times 1$  | vector of errors                          | $\\e$                    |\n| $\\Y$            | vector   | $n\\times 1$  | vector of independent variables | $\\y$                    |\n| $\\Xm$           | matrix   | $n\\times K$  | matrix of dependent variables   | $\\mathbf X$             |\n| $\\X_i$          | vector   | $1\\times K$  | $i$th row of $\\Xm$              | $\\x_i$                  |\n| $\\X_j$          | vector   | $n \\times 1$ | $j$th row of $\\Xm$              | $\\x_j$                  |\n\nThis notation is by no means standard, an notation unfortunately varies widely across sources. The only piece of notation which conflicts is the random vector of regressors $\\X$ and the realization of $\\Xm = \\X$. Whenever it is unclear which is being referenced, I will try to be specific.\n\n:::{#def-}\nThe <span style=\"color:red\">**_ordinary least squares (OLS) estimator_**</span> is defined as \n\\begin{align*}\n\\hat{\\bet}_\\text{OLS}(\\Xm,\\Y) &= (\\Xm'\\Xm)^{-1}(\\Xm\\Y)\n= \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_iY_i\\right)\n\\end{align*} An realization of this estimator (an estimate) is \n\\begin{align*}\n\\hat{\\mathbf b}_\\text{OLS} = \\hat{\\bet}_\\text{OLS}(\\X,\\y) &= (\\X'\\X)^{-1}(\\X\\y)\n= \\left(\\frac{1}{n}\\sum_{i=1}^n\\x_i'\\x_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\x_iy_i\\right)\n\\end{align*} \nand will exist when the inverse $(\\X'\\X)^{-1}$ exists.\n:::\n\n\n:::{#exm-funref}\nWe can easily write a function which calculates an OLS estimate given a random sample.^[A deeper dive on this is given in @nlaa]\n\n```{r}\nOLS <- function(y, X){\n  #if X is just one column vector, format it as a matrix\n  if(is.null(ncol(X))){\n    X <- matrix(X)\n  }\n  K <- ncol(X)\n  if(det(t(X) %*% X) == 0) {stop(\"rank(X'X) < K\")}\n  \n  output <- tibble(\n    parameter = paste(\"β\", 1:K, \" estimate\", sep = \"\"),\n    estimate = as.numeric(solve(t(X) %*% X) %*% t(X) %*% y)\n  )\n  \n  return(output)\n}\n```\n\nLet's randomly generate a sample to test our function. Suppose we have a sample of size $n=1000$ from a linear model where $X_1 \\iid \\text{Uni}(0,10)$, $\\varepsilon \\iid\\text{Uni}(-5,5)$, $X_1 \\perp \\varepsilon$, and $Y = 2 + 4X_1 + \\varepsilon$. Because $\\varepsilon$ and $X$ are independent, we've specified their respective marginal densities instead of joint density. \n\n```{r}\nsim_linear_model <- function(beta, n, dist_vec, dist_params_list){\n   K <- length(beta)\n   \n   # store model details\n   args <- dist_params_list %>% \n     map(\\(x) unlist(append(n, x))) %>% \n     paste() %>% \n     str_remove(., \"c\")\n   \n   funcs <- paste(substitute(dist_vec))[-1]\n   \n   model <- list(\n     \"beta\" = beta,\n     \"distribution\" = paste0(funcs, args)\n   )\n   \n  # Draw (X, e) where e is the final vector given by provided distributions\n  drawn <- map2(dist_vec, dist_params_list, \\(x, y) do.call(x, append(n, y))) %>%\n    bind_cols(.name_repair = ~ vctrs::vec_as_names(..., repair = \"unique\", quiet = TRUE))  %>% \n    # name first k - 1 columns x2,...,xk\n    rename_with(\\(col) paste0(\"x\", as.numeric(str_remove(col, \"...\")) + 1), )  %>%\n    # add x1 = 1 for intercept\n    add_column(\"x1\" = 1, .before = 1)  %>%\n    # name last column e, for structural error\n    rename(\"e\" = K + 1)\n  \n  # Define table of the observed data (y,X)\n  observed <- drawn %>%\n    mutate(y = as.numeric(as.matrix(across(1:K)) %*% beta + e)) %>%\n    select(-e)\n  \n  # Define design matrix\n  X <- observed %>%\n    select(-y) %>%\n    as.matrix()\n  \n  output <- list(\n    \"sim_draws\" = drawn,\n    \"observed_data\" = observed,\n    \"e\" = drawn$e,\n    \"X\" = X,\n    \"y\" = observed$y,\n    \"model\" = model\n  )\n}\n\n\nresults <- sim_linear_model(\n  beta = c(2,4),\n  n = 100,\n  dist_vec = c(runif, runif),\n  dist_params_list = list(list(0,10), list(-5, 5))\n)\n\nresults$model\n```\n\nBefore we estimate our model, we should think about whether our model satisfies the assumptions that $\\E{\\X'\\X}$ is invertible and $\\E{\\X'\\ep} = \\zer$. The first assumption holds because we only have one non-trivial independent variable (the trivial one is constant 1 which gives the intercept), and it is not a constant (so it cannot be a linear function of the constant 1). We have $\\E{\\varepsilon} = 0$, so by independence we have \n\n$$\\E{\\X'\\ep} = \\E{X_1\\varepsilon} = \\E{X_1}\\E{\\varepsilon} =\\E{X_1}\\cdot0 = 0$$\nWe can actually use the LLN to consistently estimate $\\E{\\X'\\X}$ and $\\E{X_1'\\varepsilon}$, and see if our estimates satisfy our assumptions. For a sufficiently large $n$, we should see that \n\\begin{align*}\n\\text{rank}\\left(\\frac{1}{n}\\sum_{i=1}^n \\x_i'\\x_i\\right) &\\approx K\\\\\n\\left(\\frac{1}{n}\\sum_{i=1}^n x_{1i}'e_i\\right) &\\approx 0\n\\end{align*}\nThe sample size $n=25$ may be a bit too modest, so let's generate a new sample of size $n'=100,000$.\n\n```{r}\nresults_prime <- sim_linear_model(\n  c(2,4),\n  1e5,\n  c(runif, runif),\n  list(list(0,10), list(-5, 5))\n)\n\n# Sample rank of X'X\nrankMatrix((t(results_prime$X) %*% results_prime$X)/nrow(results_prime$X))[1]\n\n# Sample mean of X'ε\ncolMeans(results_prime$X * results_prime$e)\n```\n\nIt appears our assumptions are met, so we can go ahead with estimation. It is important to recognize that in practice we don't observe the realizations $\\ep$, so calculating the sample analog of $\\E{\\X'\\ep}$ is not possible with real data, but it is a good gut check when conducting simulations.\n\n```{r}\nbeta_hat <- OLS(results$y, results$X)\nbeta_hat\n```\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot56\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"Our observed data (in black) is drawn from the unobserved population model (blue). We use this data to estimate the model, and the line associated with this estimate is shown in red.\"\n#| code-summary: \"Show code which generates figure\"\nresults$observed_data %>%\n  ggplot(aes(x2, y)) +\n  geom_point(aes(color = \"(Observed) Sample\")) +\n  geom_abline(aes(intercept = 2, slope = 4, color = \"(Unobserved) Population Model\")) +\n  geom_abline(aes(intercept = beta_hat$estimate[1], slope = beta_hat$estimate[2], color = \"Estimated Model\")) +\n  theme_minimal() +\n  labs(colour=\"\") +\n  scale_colour_manual(values=c(\"black\", \"blue\", \"red\")) +\n  theme(legend.position = \"bottom\")\n```\n\n:::\n\n:::{#exm-}\n\n## Linear Projection Model, OLS\n\nOLS can be used in the context of $\\mathcal P_\\text{LM}$ to estimate the best linear projection between two random variables $(Y,\\X)$. OLS was the method used by @pearson1903laws to estimate the relationship between height and genetics. We can replicate this work with an data set based on the original data collected by @pearson1903laws.\n\n```{r}\n#| warning: false\nheight_df <- read_csv(\"data/height_data.csv\")\nX <- as.matrix(height_df$Father)\ny <- height_df$Son\nOLS(y,X)\n```\n\n\n:::\n\n:::{#exm-}\n\n## OLS Estimate Does not Exist\n\nIt is possible that $\\E{\\X'\\X}$ is invertible while realized value $\\Xm'\\Xm = \\X'\\X$ is not invertible. For example, if our model is $Y = \\beta_1 X_1 + \\epsilon$ where $X \\sim \\text{Binom}(4, 0.5)$,^[If $X\\sim \\text{Binom}(n, p)$, then $\\E{X} = np(1-p) + (np)^2$] we have $$\\E{\\X'\\X} = \\E{X_1^2} = 5.$$ If we observe an independent sample of size $n=2$ generated from this model, we may observe something like $\\x_1 = [2,2]$. In this case \n$$\\x'\\x = \\begin{bmatrix} 4 &4 \\\\ 4 & 4\\end{bmatrix},$$ which is certainly not invertible. Furthermore, the probability we draw this sample is \n$$\\Pr(\\x = [2,2]) = [\\Pr(X = 2)]^2 = (0.375)^2 = 0.140625,$$ so the chances this happen are not trivial. However, $n$ is usually much greater than $2$, and as $n\\to\\infty$ the probability that $\\X'\\X$ is not invertible will go to zero. This is a direct consequence of the LLN: \n\n$$\\X'\\X = \\left(\\frac{1}{n}\\sum_{i=1}^n\\x_i'\\x_i\\right) \\pto \\E{\\X'\\X} $$\n\n:::\n\n::: {.remark}\nWhether it is easier to write our terms related to $\\OLS$ in terms of matrices or sums of vectors will depend on the result we are building to or trying to prove. This can be a bit confusing, so here is a list of various equalities (many of which imply others), that we will use:\n\\begin{align*}\n\\Xm'\\Xm & = \\sum_{i=1}^n \\X_i'\\X_i\\\\\n\\Xm'\\Y & = \\sum_{i=1}^n \\X_i'Y_i\\\\\n\\Xm'\\ep & = \\sum_{i=1}^n \\X_i'\\varepsilon_i\\\\\n\\ep'\\ep & = \\sum_{i=1}^n \\varepsilon_i^2\n\\end{align*}\nAn important result which follows from the first equality is $\\E{\\Xm'\\Xm} = n \\E{\\X'\\X}$ in the event that $\\X_i$ are independent. \n:::\n\n## Properties of OLS\n\nAs likely anticipated, the OLS estimator has a number of desirable properties under certain assumptions, some of which we will make in addition to orthagonality and lack of multicollinearity. The first property we establish is consistency.\n\n:::{#prp-}\n\n## Consistency\n\nSuppose $P_{\\bet,\\Sig} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$ and $\\E{\\X'\\ep} = \\zer$, then $\\hat{\\bet}_\\text{OLS} \\pto \\bet$.\n:::\n\n:::{.proof}\nWe have $\\bet = \\left(\\E{\\X'\\X}\\right)^{-1}\\E{\\X'Y}$, where $\\bet$ is guaranteed to exist and be unique using our assumptions. As $n\\to\\infty$, $\\X'\\X$ will be invertible with probability one, so $\\hat{\\bet}_\\text{OLS}$ will exist (with probability one). We can write our estimator as \n\\begin{align*}\n\\hat{\\bet}_\\text{OLS} &= \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'Y_i\\right)\\\\\n&= \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'(\\X_i\\bet + \\varepsilon_i)\\right) & (Y_i = \\X_i\\bet + \\varepsilon_i)\\\\\n& = \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\bet\\right) + \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)\\\\\n& = \\bet\\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)}_{\\mathbf I} + \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)\\\\\n& = \\bet + \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)\n\\end{align*}\nWe can apply the LLN along with the continuous mapping theorem (applied to the inverse term) and Slutky's theorem (applied to the product of convergent sequences) to conclude,\n$$ \\hat{\\bet}_\\text{OLS} =  \\bet + \\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}}_{\\pto \\E{\\X'\\X}}\\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)}_{\\pto \\E{\\X'\\ep}} \\pto \\bet + \\E{\\X'\\X}^{-1}\\underbrace{\\E{\\X'\\ep}}_\\zer = \\bet.$$\nTherefore $\\hat{\\bet}_\\text{OLS} \\pto \\bet$, where the limit $\\bet$ is unique by identification.\n:::\n\n:::{#exm-}\nReturn to the model $X_1 \\iid \\text{Uni}(0,10)$, $\\varepsilon \\iid\\text{Uni}(-5,5)$, $X_1 \\perp \\varepsilon$ (implying $\\E{\\X'\\ep} = \\zer$), and $Y = 2 + 4X_1 + \\varepsilon$. If we estimate this model for samples of increasing size, we should see that our estimates converge to the true values. \n\n```{r}\niter <- function(sim_model, k){\n  output <- OLS(sim_model$y[1:k], sim_model$X[1:k,]) %>% \n    mutate(\n      sample_size = k,\n      true_value = sim_model$model$beta,\n      norm = sqrt(sum((estimate - true_value)^2))\n    )\n  return(output)\n}\n\nsim <- function(beta, k_vals, max_n, dist_vec, dist_params_list, s){\n  sim_model <- sim_linear_model(beta, max_n, dist_vec, dist_params_list)\n  output <- k_vals %>% \n    map(iter, sim_model = sim_model) %>% \n    bind_rows() %>% \n    mutate(iter_num = s)\n  return(output)\n}\n\nouter_sim <- function(N, beta, k_vals, max_n, dist_vec, dist_params_list){\n  output <- 1:N %>% \n    map(sim, beta = beta, k_vals = k_vals, max_n = max_n, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\nresults <- outer_sim(\n  1e4, \n  c(2,4), \n  seq(10, 5e3, length = 100), \n  5e3, \n  c(runif, runif), \n  list(list(0,10), list(-5, 5))\n)\n```\n\nIt does appear that as $n\\to\\infty$ we have $\\hat{\\beta}_\\text{1,OLS} \\pto 2$ and $\\hat{\\beta}_\\text{2,OLS} \\pto 4$\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot57\n#| fig-asp: 1\n#| warning: false\n#| fig-width: 8\n#| fig-cap: \"As the sample size increases, the probability that our estimate is far from zero approaches zero.\"\n#| code-summary: \"Show code which generates figure\"\n\np1 <- results  %>%\n  ggplot(aes(sample_size, estimate)) +\n  geom_line(aes(group = iter_num), size = 0.1, alpha = 0.1) +\n  facet_wrap(~parameter) +\n  theme_minimal() +\n  ylim(0, 5) +\n  labs(x = \"\", y = \"OLS Estimates for β\")\n\np2 <- results %>%\n  select(\n    sample_size,\n    norm,\n    iter_num\n  ) %>%\n  unique() %>%\n  expand_grid(e = (1:5)/10) %>%\n  group_by(sample_size, e) %>%\n  summarize(prob = sum(norm > e) / n()) %>%\n  ggplot(aes(sample_size, prob, color = as.factor(e))) +\n  geom_line() +\n  labs(color = \"ε\", y = \"Pr(Norm > ε)\", x = \"Sample Size, n\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\nggarrange(p1, p2, ncol = 1)\n```\n:::\n\nNow let's consider whether if (and under what conditions) $\\hat{\\bet}_\\text{OLS}$ unbiased. \n\n\\begin{align*}\n\\E{\\hat{\\bet}_\\text{OLS}} & = \\E{\\E{\\hat{\\bet}_\\text{OLS}}\\mid \\Xm } & (\\text{iterated expectations})\\\\\n& = \\E{\\E{(\\Xm'\\Xm)^{-1}\\Xm'\\Y}\\mid \\Xm }\\\\\n& = \\E{\\E{(\\Xm'\\Xm)^{-1}\\Xm'(\\Xm\\bet + \\ep)}\\mid \\Xm} & (\\Y & = \\Xm\\bet + \\ep)\\\\\n& = \\E{\\E{((\\Xm'\\Xm)^{-1}\\Xm'\\Xm)\\bet + (\\Xm'\\Xm)^{-1}\\Xm'\\ep)}\\mid \\Xm}\\\\\n& = \\E{\\E{\\bet}\\mid \\Xm} +\\E{(\\Xm'\\Xm)^{-1}\\Xm'\\E{\\ep\\mid \\Xm}}\\\\\n& = \\bet +  \\E{(\\Xm'\\Xm)^{-1}\\Xm'\\E{\\ep\\mid \\Xm}} & (\\bet\\text{ is a constant})\\\\\n& \\neq \\bet\n\\end{align*}\nUnder our current assumption, OLS is has a bias of $\\E{(\\Xm'\\Xm)^{-1}\\X'\\E{\\ep\\mid \\Xm}}$. While we are operating under the assumption that $\\E{ \\X'\\ep} = \\zer$, this does not imply that $\\ep\\perp\\Xm$ (which would mean $\\E{\\ep\\mid \\Xm} = \\E{\\ep}=\\zer$) For this to happen, we need to impose our third assumption on the linear model. \n\n:::{#def-}\nThe random regressors $\\X$ are <span style=\"color:red\">**_exogenous_**</span> if  \n\\begin{align*}\n\\E{\\varepsilon_i\\mid \\X} & = 0 &(i=1,\\ldots,n)\n\\end{align*}\nwhich is written compactly as $\\E{\\ep\\mid \\Xm} = \\zer$.\n:::\n\nBy properties of independence and conditional expectation, exogeneity implies orthogonality. Technically speaking, we aren't adding a third assumption, as much as we are strengthening one of our current assumptions.\n\n:::{#prp-}\n\n## OLS is Unbiased\n\nSuppose $P_{\\bet,\\Sig} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$ and $\\E{\\ep\\mid \\Xm} = \\zer$, then $\\OLS$ is an unbiased estimator for $\\bet$.\n:::\n\n:::{.proof}\n$$\\E{\\hat{\\bet}_\\text{OLS}} = \\bet +  \\E{(\\Xm'\\Xm)^{-1}\\Xm'\\E{\\ep\\mid \\Xm}} =\\bet +  \\E{(\\Xm'\\Xm)^{-1}\\Xm'\\zer} = \\bet $$\nTherefore, $\\hat{\\bet}_\\text{OLS}$ is an unbiased estimator for $\\bet$.\n:::\n\n:::{#def-}\nThe  <span style=\"color:red\">**_(unbiased) linear model_**</span> is defined as $\\mathcal P_\\text{LM} = \\{P_{\\bet,\\Sig} \\mid \\bet \\in \\mathbb R^{K}, \\Sig\\in\\mathbb R^n\\times\\mathbb R^n\\}$, where \n\\begin{align*}\nP_{\\bet, \\Sig} &= \\{F_{\\Xm,\\ep} \\mid \\Y= \\Xm\\bet +\\ep, \\ \\ \\Sig  = \\var{\\ep\\mid\\Xm},\\ f_{\\Xm}=\\textstyle\\prod_{i=1}^n f_{\\X_i}, \\ \\text{rank}\\left(\\E{\\X'\\X}\\right) = K,\\ \\E{\\ep \\mid \\Xm} = \\zer\\},\\\\\n\\Xm & = [\\X_1, \\cdots, \\X_j, \\cdots \\X_K] = [\\X_1, \\cdots, \\X_i, \\cdots \\X_n]',\\\\\n\\Y & = [Y_1, \\ldots, Y_n].\n\\end{align*}\n:::\n\n:::{#exm-}\nIf we go back to our simulated estimates where $X_1 \\iid \\text{Uni}(0,10)$, $\\varepsilon \\iid\\text{Uni}(-5,5)$, $X_1 \\perp \\varepsilon$, and $Y = 2 + 4X_1 + \\varepsilon$, we should see that the sample mean of our simulated estimates are approximately equal to the true values $\\bet = (2,4)$. This holds regardless of the sample size $n$. \n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot575\n#| fig-asp: 1\n#| warning: false\n#| fig-width: 8\n#| fig-cap: \"The expected value of our OLS estimates calculated over 10,000 iterations at varying sample sizes.\"\n#| code-summary: \"Show code which generates figure\"\n\nresults %>%\n  group_by(sample_size, parameter) %>%\n  summarize(avg = mean(estimate)) %>%\n  ungroup() %>%\n  ggplot(aes(sample_size, avg, color = parameter)) +\n  geom_line() +\n  theme_minimal() +\n  labs(color = \"\", y = \"Expected Value\") +\n  theme(legend.position = \"bottom\")\n```\n\n:::\n\nThe assumption of this stronger form of exogeneity also gives several nice properties beyond unbiasedness. \n\n:::{#prp-}\n\n## Consequences of Exogeneity\n\nSuppose $P_{\\bet,\\Sig} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\ep\\mid \\Xm} = \\zer$, and $\\Sig = \\var{\\ep\\mid \\Xm}$. Then \n\n1. $\\E{\\Y\\mid \\Xm} = \\Xm\\bet$;\n2. $\\E{\\ep} = \\zer$ (even if $\\beta_1 = 0$)\n3. $\\Sig = \\E{\\ep\\ep'\\mid \\Xm} = \\var{\\ep}$\n\n:::\n\n:::{.proof}\n<span style=\"color:white\">space</span> \n\n1. $\\E{\\Y\\mid \\Xm} = \\E{\\Xm\\bet + \\ep \\mid \\Xm} = \\E{\\Xm\\bet \\mid \\Xm} + \\E{\\ep\\mid \\Xm}= \\Xm\\bet + \\zer = \\Xm\\bet$\n2. $\\E{\\ep} = \\E{\\E{\\ep\\mid \\Xm}} = \\E{\\zer} = \\zer$\n3. The first portion is a consequence of the definition of variance. $$\\Sig = \\var{\\ep\\mid \\Xm} = \\E{[\\ep - \\E{\\ep \\mid \\Xm}][\\ep - \\E{\\ep \\mid \\Xm}]'\\mid \\Xm} = \\E{[\\ep - \\zer][\\ep - \\zer]'\\mid \\Xm} = \\E{\\ep\\ep'\\mid \\Xm}$$ The second portion follows from the [law of total variance](https://en.wikipedia.org/wiki/Law_of_total_variance).\n$$ \\var{\\ep} = \\E{\\var{\\ep \\mid \\Xm}} + \\var{\\E{\\ep\\mid \\Xm}} = \\E{\\Sig} + \\var{0} = \\Sig$$\n\n<span style=\"color:white\">space</span> \n:::\n\nFinally let's consider the variance of our OLS estimator. Due to the stochastic nature of $\\Xm$, our interest is actually in the conditional variance of $\\hat{\\bet}_\\text{OLS}$ given $\\Xm$. Until now, we haven't paid much attention to the parameter $\\Sig$, but it will come into play here.\n\n\\begin{align*}\n\\var{\\hat{\\bet}_\\text{OLS}\\mid \\Xm} & = \\E{ \\left(\\hat{\\bet}_\\text{OLS} - \\E{ \\hat{\\bet}_\\text{OLS} }\\right) \\left(\\hat{\\bet}_\\text{OLS} - \\E{\\hat{\\bet}_\\text{OLS}}\\right)'\\mid \\Xm}\\\\\n& = \\E{ \\left(\\hat{\\bet}_\\text{OLS} - \\bet\\right) \\left(\\hat{\\bet}_\\text{OLS} - \\bet\\right)'\\mid \\Xm} & (\\hat{\\bet}_\\text{OLS} \\text{ unbiased})\\\\\n& = \\E{ \\left[(\\bet + (\\Xm'\\Xm)^{-1}\\Xm'\\ep) - \\bet\\right] \\left[(\\bet + (\\Xm'\\Xm)^{-1}\\Xm'\\ep) - \\bet\\right]'\\mid \\Xm} & (\\hat{\\bet}_\\text{OLS} = \\bet + (\\Xm'\\Xm)^{-1}\\Xm\\ep)\\\\\n& = \\E{ \\left[(\\Xm'\\Xm)^{-1}\\Xm'\\ep\\right] \\left[(\\Xm'\\Xm)^{-1}\\Xm'\\ep\\right]'\\mid \\Xm}\\\\\n& = \\E{ (\\Xm'\\Xm)^{-1}\\Xm'\\ep\\ep'\\Xm (\\Xm'\\Xm)^{-1}\\mid \\Xm}\\\\\n& =  (\\Xm'\\Xm)^{-1}\\Xm'\\E{\\ep\\ep'\\mid \\Xm}\\Xm (\\Xm'\\Xm)^{-1}\\\\\n& =  (\\Xm'\\Xm)^{-1}\\Xm'\\Sig\\Xm (\\Xm'\\Xm)^{-1} & (\\Sig = \\E{\\ep\\ep'\\mid \\Xm})\n\\end{align*}\n\n:::{#prp-}\n\n## OLS Variance I\n\nSuppose $P_{\\bet,\\Sig} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\ep\\mid \\Xm} = \\zer$, and $\\Sig = \\var{\\ep\\mid \\Xm}$. Then \n$$ \\var{\\hat{\\bet}_\\text{OLS}\\mid \\Xm} = (\\Xm'\\Xm)^{-1}\\Xm'\\Sig\\Xm (\\Xm'\\Xm)^{-1}$$\n:::\n\n\n\n:::{.example}\nSuppose the our model is given as \n\\begin{align*}\nY & = 2 + 4X_1 + \\varepsilon\\\\\nX_i &\\iid \\text{Uni}(0,10)\\\\\n\\ep &\\sim N(\\zer, \\Sig)\\\\\n\\Sig_{ii} & = \\begin{cases}1 & i \\text{ even}\\\\ 2 & i \\text{ odd}\\end{cases}\\\\\n\\Sig_{i\\ell} & = \\abs{i-\\ell}^{-1}\n\\end{align*}\nLet's perform a simulation to verify the formula for $\\var{\\hat{\\bet}_\\text{OLS}\\mid \\Xm}$ The variance of the error is defined such that if our observation has an even index, $\\var{\\varepsilon_i} = 1$, otherwise $\\var{\\varepsilon_i} = 2$. Errors are also correlated across observations. We have $\\cov{\\varepsilon_i,\\varepsilon_\\ell} = \\abs{i-\\ell}^{-1}$. The closer two observations are index-wise, the stronger their correlation. We will simulate estimates for sample sizes of $n=100$.\n\n```{r}\nsigma_il <- function(i, l){\n  if(i == l){\n    return(2^((i %% 2) == 1))*(1^((i %% 2) == 0))\n  } else {\n    return(1/abs(i-l))\n  }\n}\n\nSigma_n <- function(n){\n  output <- expand_grid(i = 1:n, l = 1:n) %>% \n    mutate(sigma_il = map2_dbl(i, l, sigma_il)) %>% \n    pivot_wider(names_from = l, values_from = sigma_il) %>% \n    select(-i) %>%\n    as.matrix()\n  return(output)\n}\n\ndraw_e <- function(n, mu){\n  output <- t(rmvnorm(1, mu, Sigma_n(n)))\n  return(output)\n}\n```\n\nWe are calculating the variance *conditional on $\\Xm$*, so this means we will use the same realization $\\Xm = \\X$ for each simulation.\n\n```{r}\n# for a fixed X, draw e and estimate model\niter <- function(X, beta, mu,s){\n  e <- draw_e(nrow(X), mu)\n  y <- X %*% beta + e\n  output <- OLS(y, X) %>% \n    mutate(iter_num = s)\n  return(output)\n}\n\nsim <- function(N, n, beta, dist_X, dist_X_params, mu){\n  # draw a single X which will be fixed across iterations\n  x <- do.call(dist_X, append(n, dist_X_params))\n  X <- cbind(1, x)\n  \n  # perform N iterations with N different draws from draw_e\n  estimates <- 1:N %>% \n    map(iter, X = X, beta = beta, mu = mu) %>% \n    bind_rows()\n  \n  output <- list(\n    \"X\" = X,\n    \"Sigma\" = Sigma_n(n),\n    \"estimates\" = estimates\n  )\n  return(output)\n}\n\nresults <- sim(1e4, 100, c(2,4), runif, list(0, 10), rep(0,100))\n\n# actual  var(β | X) = (X'X)⁻¹X'ΣX(X'X)⁻¹\nsolve(t(results$X) %*% results$X) %*% t(results$X) %*% results$Sigma %*% results$X %*% solve(t(results$X) %*% results$X)\n\n# calculate sample covariance matrix of estimates\nresults$estimates %>% \n  pivot_wider(values_from = estimate, names_from = parameter) %>% \n  select(-iter_num) %>% \n  as.matrix() %>% \n  cov()\n```\n\nOur simulated variance is quite close to the true conditional variance! \n:::\n\nWe can simplify the formulas for the OLS estimator's variance greatly if we impose one final assumption on our model.^[A weaker version of these assumptions are provided in chapter 4 of @wooldridge2010econometric.] \n\n:::{#def-}\nWe the errors of a model are <span style=\"color:red\">**_homoskedastic_**</span> if\n\\begin{align*}\n\\var{\\varepsilon_i \\mid \\X} &= \\sigma^2 & (i=1,\\ldots,n)\n\\end{align*}\n(where $\\X$ is the random vector of regressors), otherwise they are <span style=\"color:red\">**_heteroskedastic_**</span>. If $$\\cov{\\varepsilon_i,\\varepsilon_\\ell} = 0$$ for all $i,\\ell = 1,\\ldots,n$ where $i\\neq \\ell$ we say errors are <span style=\"color:red\">**_nonautocorrelated_**</span>, otherwise they are <span style=\"color:red\">**_autocorrelated/serially correlated_**</span>. If errors are both homoskedastic and nonautocorrelated, then we have <span style=\"color:red\">**_spherical errors_**</span> and can write\n$$\\E{\\ep'\\ep\\mid \\Xm} = \\var{\\ep\\mid \\Xm} = \\sigma^2\\mathbf I.$$\n:::\n\nWith the addition of this assumption, we have the classical linear model that you are likely familiar with. \n\n:::{#def-}\nThe <span style=\"color:red\">**_(Gauss-Markov/classical) linear model_**</span> is defined as $\\mathcal P_\\text{LM} = \\{P_{\\bet,\\sigma^2} \\mid \\bet \\in \\mathbb R^{K}, \\sigma^2\\in\\mathbb R\\}$, where \n\\begin{align*}\nP_{\\bet,\\sigma^2} &= \\{F_{\\Xm,\\ep} \\mid \\Y= \\Xm\\bet +\\ep, \\ \\E{\\ep'\\ep\\mid \\X}=\\sigma^2\\mathbf I, \\ f_{\\Xm}=\\textstyle\\prod_{i=1}^n f_{\\X_i}, \\ \\text{rank}\\left(\\E{\\X'\\X}\\right) = K,\\ \\E{\\ep \\mid \\Xm} = \\zer\\},\\\\\n\\Xm & = [\\X_1, \\cdots, \\X_j, \\cdots \\X_K] = [\\X_1, \\cdots, \\X_i, \\cdots \\X_n]',\\\\\n\\Y & = [Y_1, \\ldots, Y_n].\n\\end{align*}\n:::\n\nWhen people talk about \"the linear (regression) model\", this is usually the model they are discussing. The collective assumptions are sometimes known as the \"Gauss-Markov assumptions\", as they are the sufficient conditions for the Gauss-Markov theorem (which will be presented shortly) to hold.  \n\n:::{#cor-olsvar2}\n\n## OLS Variance II\n\nSuppose $P_{\\bet,\\sigma^2} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\ep\\mid \\Xm} = \\zer$, and $\\E{\\ep\\ep'\\mid\\Xm} = \\sigma^2\\mathbf I$. Then \n\\begin{align*}\n\\var{\\hat{\\bet}_\\text{OLS}\\mid \\Xm} &= \\sigma^2(\\Xm'\\Xm)^{-1} = {\\sigma^2}\\left(\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\n\\end{align*}\n:::\n\n:::{.proof}\n$(\\Xm'\\Xm)^{-1}\\Xm'\\E{\\ep\\ep'\\mid \\Xm}\\Xm (\\Xm'\\Xm)^{-1} = (\\Xm'\\Xm)^{-1}\\Xm\\sigma^2\\mathbf I\\Xm (\\Xm'\\Xm)^{-1} = \\sigma^2\\underbrace{[(\\Xm'\\Xm)^{-1}(\\Xm'\\Xm)]}_{\\mathbf I}(\\Xm'\\Xm)^{-1} = \\sigma^2(\\Xm'\\Xm)^{-1}$\n:::\n\n:::{#exm-csvarols}\n\n## Comparative Statics and Variance\n\nSuppose the linear model satisfies the Gauss-Markov assumptions and $K = 2$. This simple setting allows us to gain a great deal of insight into the variance of the OLS estimator. In this case $\\X$ has two columns: a column one 1s, and $\\x$. \n\\begin{align*}\n\\Xm & = [\\mathbf 1, \\X_1]\\\\\n\\Xm'\\Xm & = \\begin{bmatrix}n & \\sum_{i=1}^nX_i\\\\ \\sum_{i=1}^nX_i &  \\sum_{i=1}^nX_i^2 \\end{bmatrix}\\\\\n\\sigma^2(\\Xm'\\Xm)^{-1} &= \\frac{\\sigma^2}{n\\sum_{i=1}^n X_i^2 - \\left(\\sum_{i=1}^n X_i\\right)^2} \\begin{bmatrix} \\sum_{i=1}^n X_i^2  & -\\sum_{i=1}^n X_i \\\\  -\\sum_{i=1}^n X_i & n \\end{bmatrix} \\\\\n\\\\ & = \\frac{\\sigma^2}{n[n(\\bar{X})^2] - (n\\bar{X^2})} \\begin{bmatrix} \\sum_{i=1}^n X_i^2  & -\\sum_{i=1}^n X_i \\\\  -\\sum_{i=1}^n X_i & n \\end{bmatrix}\\\\\n & = \\frac{\\sigma^2}{n^2(\\bar{X}^2 - \\bar{X^2})} \\begin{bmatrix} \\sum_{i=1}^n X_i^2  & -\\sum_{i=1}^n X_i \\\\  -\\sum_{i=1}^n X_i & n \\end{bmatrix}\\\\\n & = \\frac{\\sigma^2}{(n^2 - n)\\widehat{\\text{Var}}(X)} \\begin{bmatrix} \\sum_{i=1}^n X_i^2  & -\\sum_{i=1}^n X_i \\\\  -\\sum_{i=1}^n X_i & n \\end{bmatrix}\\\\  & = \\begin{bmatrix} \\frac{\\sigma^2\\sum_{i=1}^n X_i^2}{(n^2 - n)\\widehat{\\text{Var}}(X)}  & -\\frac{\\sigma^2\\sum_{i=1}^n X_i}{(n^2 - n)\\widehat{\\text{Var}}(X)} \\\\  -\\frac{\\sigma^2\\sum_{i=1}^n X_i}{(n^2 - n)\\widehat{\\text{Var}}(X)} & \\frac{\\sigma^2n}{(n^2 - n)\\widehat{\\text{Var}}(X)} \\end{bmatrix}\\\\\n\\var{\\hat{\\beta}_{1,OLS}\\mid \\Xm} & = \\frac{\\sigma^2\\sum_{i=1}^n X_i^2}{(n^2 - n)\\widehat{\\text{Var}}(X)}\\\\\n\\var{\\hat{\\beta}_{2,OLS}\\mid \\Xm} & =\\frac{\\sigma^2n}{(n^2 - n)\\widehat{\\text{Var}}(X)}\n\\end{align*}\nWhat happens to these variances as we change the variance of the error $\\sigma^2$, and the values of $x_i$ change? Instead of finding the signs of various taking partial derivatives, let's graph some examples. First let's see what happens when we hold $\\X$ constant but increase $\\sigma^2$.\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot58\n#| warning: false\n#| message: false\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"The larger the variance of the error term, the larger the standard errors associated with our OLS estimates.\"\n#| code-summary: \"Show code which generates figure\"\ndf1 <- data.frame(x = -4:5, e = rnorm(10, 0, 1)) %>% \n  mutate(y = 2*x + e, group = \"Low σ^2\") \n\ndf2 <- data.frame(x = -4:5, e = rnorm(10, 0, 5)) %>% \n  mutate(y = 2*x + e, group = \"High σ^2\") \n\nbind_rows(df1, df2) %>% \n  ggplot(aes(x,y)) +\n  geom_smooth(method = \"lm\", col = \"blue\", size = 0.5) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~group) +\n  theme_minimal()\n```\n\nEach graph contains the estimates linear model, with variance illustrated by the gray envelope around the lines. The width of this envelope at the red line $x=0$ corresponds to the variance $\\hat{\\beta}_{1,OLS}$, while the degree to which the width of the envelope varies along the $x$-axis corresponds to the variance of $\\hat{\\beta}_{1,OLS}$. We can see that the variance of both estimators decreases when $\\sigma^2$ decreases. As the uncertainty about the stochastic element of the model $\\varepsilon_i$ decreases, we become more confident in our estimates. Now consider what happens when we change the variance of $x$. \n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot59\n#| warning: false\n#| message: false\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"The variance of the OLS estimator decreases as the variance of independent variables increases\"\n#| code-summary: \"Show code which generates figure\"\ndf1 <- tibble(\n  x = runif(10, 4,6), \n  e = rnorm(10, 0, 1)\n  ) %>% \n  mutate(\n    y = 2*x + e,\n    group = \"Low Variance of X\"\n  ) \n\ndf2 <- tibble(\n  x = runif(10, -5,15),\n  e = rnorm(10, 0, 1)\n  ) %>% \n  mutate(\n    y = 2*x + e, \n    group = \"High Variance of X\"\n  ) \n\nbind_rows(df1, df2) %>% \n  ggplot(aes(x,y)) +\n  geom_smooth(method = \"lm\", col = \"blue\", size = 0.5, fullrange=TRUE) +\n  geom_point() +\n  facet_wrap(~group) +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"dashed\") +\n  theme_minimal()\n```\n\nThe more variance we have in our regressors, the less variance our estimator exhibits. Essentially, the variance in observations provides more information about the relationship between the dependent and independent variables, so we get better estimates. Finally consider how the variance changes as the location of our data change relative to the y-axis\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| label: fig-plot510\n#| warning: false\n#| message: false\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"The proximity of the regressors to origin affects the variance of the intercept estimator\"\n#| code-summary: \"Show code which generates figure\"\ndf1 <- tibble(\n  x = runif(10, -1,1), \n  e = rnorm(10, 0, 1)\n  ) %>% \n  mutate(\n    y = 2*x + e, \n    group = \"X Near Origin\"\n  ) \n\ndf2 <- data.frame(\n  x = runif(10, 10,12), \n  e = rnorm(10, 0, 1)\n  ) %>% \n  mutate(\n    y = 2*x + e, \n    group = \"X Far from Origin\"\n  ) \n\nbind_rows(df1, df2) %>% \n  ggplot(aes(x,y)) +\n  geom_smooth(method = \"lm\", col = \"blue\", size = 0.5, fullrange=TRUE) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"dashed\") +\n  facet_wrap(~group) +\n  theme_minimal()\n```\n\nThe closer our observations are to the y-axis the better out estimates of the intercept are.\n:::\n\nIf we forget the intercept term for a moment, then we can think $\\E{\\X'\\X}$ roughly as the amount of variance in our \nregressors. The variance in regressors amounts to information about $\\bet$. The more variance/information we have about $\\X$, the better our estimates will be. \n\n## Gauss-Markov Theorem \n\nHow do we know that there aren't any other estimators that may be better than OLS? Recall from Section \\@ref(finite-sample-properties-of-estimators) we discussed the concept of a MVUE -- an unbiased estimator which is more efficient (has lower variance) than all other unbiased estimators. Finding a MVUE is difficult without additional assumptions about the unbiased estimators. With one such assumption, we do have that OLS is a MVUE among all unbiased estimators satisfying this assumption. This result is known as the Gauss-Markov theorem, and tells us that the OLS estimator has the minimum variance among all linear unbiased estimators. For the remainder of our discussion of the Gauss-Markov theorem, we will assume that our linear model satisfies: $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$ , $\\E{\\ep\\mid\\Xm}=\\zer$,and $\\E{\\ep\\ep'\\mid\\Xm} = \\sigma^2\\mathbf I$.^[Remember that we have implicitly assumed that the true model is linear.] \n\nIn the context of the linear model, a linear estimator $\\hat{\\bet}$ will take the form $\\hat{\\bet} = \\mathbf C\\Y +\\D$ for some matrix $\\mathbf C$ (which may be a function of $\\Xm$). In the case of $\\hat{\\bet}_\\text{OLS}$, $\\mathbf C = (\\Xm'\\Xm)^{-1}\\Xm'$. We will denote a general linear unbiased estimator for $\\bet$ as $\\tilde{\\bet}$. For now, let's condition on the random matrix $\\Xm$. To restrict our attention to unbiased linear estimators, $\\tilde{\\bet}$ must satisfy:\n\\begin{align*}\n&\\E{\\tilde{\\bet} \\mid \\Xm} = \\bet\\\\\n\\implies & \\E{\\mathbf C\\Y \\mid \\Xm} = \\bet \\\\\n\\implies & \\E{\\mathbf C\\Xm\\bet + \\mathbf C\\ep\\mid \\Xm} = \\bet & (\\Y= \\Xm\\bet + \\ep)\\\\\n\\implies & \\mathbf C\\Xm\\underbrace{\\E{\\bet \\mid \\Xm}}_{\\bet} + \\mathbf C\\underbrace{\\E{\\ep\\mid \\Xm}}_{\\zer} = \\bet \\\\\n\\implies &  \\mathbf C\\Xm\\bet = \\bet\\\\\n\\implies & \\mathbf C\\Xm = \\mathbf I\n\\end{align*}\nThe variance of $\\tilde{\\bet}$ can be calculated using the same exact steps we took to calculate the variance of $\\hat{\\bet}_\\text{OLS}$: \n\\begin{align*}\n\\var{\\tilde{\\bet}\\mid \\Xm} & = \\E{ \\left(\\tilde{\\bet} - \\E{ \\tilde{\\bet} }\\right) \\left(\\tilde{\\bet} - \\E{\\tilde{\\bet}}\\right)'\\mid \\Xm}\\\\\n& = \\E{ \\left(\\tilde{\\bet} - \\bet\\right) \\left(\\tilde{\\bet} - \\bet\\right)'\\mid \\Xm} & (\\tilde{\\bet} \\text{ unbiased})\\\\\n& = \\E{ \\left[(\\mathbf C\\Xm\\bet + \\mathbf C\\ep) - \\bet\\right] \\left[(\\mathbf C\\Xm\\bet + \\mathbf C\\ep) - \\bet\\right]'\\mid \\Xm} & (\\tilde{\\bet} = \\mathbf C\\Xm\\bet + \\mathbf C\\ep)\\\\\n& = \\E{ \\left[(\\bet + \\mathbf C\\ep) - \\bet\\right] \\left[(\\bet + \\mathbf C\\ep) - \\bet\\right]'\\mid \\Xm}  & (\\C\\X = \\mathbf I)\\\\\n& = \\E{ \\left[\\mathbf C\\ep\\right] \\left[\\mathbf C\\ep\\right]'\\mid \\Xm} \\\\\n& = \\E{\\mathbf C\\ep\\ep'\\mathbf C'\\mid \\Xm}\\\\\n& = \\mathbf C\\E{\\ep\\ep'\\mid \\Xm}\\mathbf C'\\\\\n&  = \\sigma^2\\mathbf C\\mathbf C' & (\\E{\\ep\\ep'} = \\sigma^2\\mathbf I)\n\\end{align*}\n\nOur goal is to show that:\n$$\\OLS = \\argmin_{\\tilde{\\bet}} \\var{\\tilde{\\bet} \\mid \\Xm}.$$\nWrite $\\C = (\\Xm'\\Xm)^{-1}\\Xm + \\D$ for some non-zero matrix $\\D$. The requirement that $\\C\\Xm = \\mathbf I$ implies that:\n$$ [(\\Xm'\\Xm)^{-1}\\Xm + \\D]\\Xm = \\mathbf I \\implies\\underbrace{(\\Xm'\\Xm)^{-1}\\Xm'\\Xm}_{\\mathbf I} + \\D\\X = \\mathbf I \\implies \\D\\Xm = \\zer $$\nNote that \n$$ \\tilde{\\bet} = \\C\\Y = [(\\Xm'\\Xm)^{-1}\\Xm + \\D]\\y = (\\Xm'\\Xm)^{-1}\\Xm\\Y + \\D\\y = \\OLS + \\D\\Y,$$ so $\\tilde{\\bet} = \\OLS$ when $\\D = \\zer$.  Our optimization problem becomes \n\\begin{align*}\n\\argmin_{\\D} \\var{\\tilde{\\bet} \\mid \\Xm} & = \\argmin_{\\D} \\sigma^2\\mathbf C\\mathbf C'\\\\\n& =  \\argmin_{\\D} \\sigma^2[(\\Xm'\\Xm)^{-1}\\Xm + \\D][(\\Xm'\\Xm)^{-1}\\Xm + \\D]'\\\\\n& =  \\argmin_{\\D} \\sigma^2[(\\Xm'\\Xm)^{-1}\\Xm + \\D][\\Xm'(\\Xm'\\Xm)^{-1} + \\D']\\\\\n& = \\argmin_{\\D} \\sigma^2[\\underbrace{(\\Xm'\\Xm)^{-1}\\Xm\\Xm'}_{\\mathbf I}(\\Xm'\\Xm)^{-1} + (\\Xm'\\Xm)^{-1}\\Xm'\\D' + \\underbrace{\\D\\Xm}_\\zer(\\Xm'\\Xm)^{-1} + \\D\\D']\\\\\n& = \\argmin_{\\D} \\sigma^2[(\\Xm'\\Xm)^{-1} + (\\Xm'\\Xm)^{-1}\\underbrace{(\\Xm\\D)}_\\zer' +  \\D\\D'] & (\\Xm'\\D' = (\\X\\D)')\\\\\n& = \\sigma^2(\\Xm'\\Xm)^{-1} + \\sigma\\D\\D'.\n\\end{align*}\nThis variance is minimized when $\\D = \\zer$,^[I'm skirting around proving the fact that the matrix $\\D$ cannot be negative definite as it isn't especially informative.] so $\\OLS$ is the most efficient unbiased linear estimator for any fixed $\\Xm =\\X$. This holds for all realizations $\\Xm=\\X$, so it will hold unconditionally as well. \n\n:::{#thm-}\n\n## Gauss-Markov Theorem\n\nSuppose $P_{\\bet,\\sigma^2} \\in \\mathcal P_\\text{LM}$ where $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\ep\\mid \\Xm} = \\zer$, and $\\E{\\ep\\ep'\\mid\\Xm} = \\sigma^2\\mathbf I$. Then $\\OLS$ is the <span style=\"color:red\">**_best linear unbiased estimator (BLUE)/minimum variance linear unbiased estimator (MVLUE)_**</span>.\n:::\n\nThe Gauss-Markov theorem is one of the major justifications for estimating linear models with $\\OLS$. With estimation thoroughly treated, we can now consider making inferences about $(\\bet,\\sigma^2)$ for $P_{\\bet,\\sigma^2}\\in\\mathcal P_\\text{LM}$.\n\n\n## Asymptotic Distribution of the OLS Estimator\n\nWe know that our estimator is consistent and the BLUE, but how does its distribution behave? It turns out that $\\OLS$ is root-n CAN under weaker assumptions than those required for the Gauss-Markov theorem. Before showing this in earnest, let's look at a special case of the linear model.\n\n:::{#exm-}\n\n## Gaussian Linear Model\n\nSuppose $P_\\text{LM}$ satisfies the Gauss-Markov assumptions, *in addition* to the assumption that $\\ep\\mid\\Xm \\sim N(\\zer,\\sigma^2\\mathbf I)$ (which is equivalent to $\\varepsilon_i\\iid N(0,\\sigma^2)$ because we have assumed spherical errors). This model is sometimes referred to as the **_Gaussian linear model_**. A common way of writing this model is $\\Y\\mid\\Xm \\sim N(\\Xm\\bet,\\sigma^2\\mathbf I)$, which emphasizes the fact that $\\E{\\Y\\mid\\Xm} = \\Xm\\bet$.  It's quite easy to derive the distribution of $\\OLS$ for this model. We won't even need to approximate the distribution via asymptotics! Using the properties of the multivariate distribution, we have:\n\\begin{align*}\n&\\OLS - \\bet = [\\bet + (\\Xm'\\Xm)^{-1}\\Xm\\ep] - \\bet\\\\\n\\implies & \\OLS - \\bet = (\\Xm'\\Xm)^{-1}\\Xm\\ep\\\\\n\\implies & \\OLS - \\bet \\sim N(\\zer, (\\Xm'\\Xm)^{-1}\\Xm\\sigma^2\\mathbf I[(\\Xm'\\Xm)^{-1}\\Xm]' ) & (\\mathbf A \\ep \\sim N(\\zer, \\mathbf A \\sigma^2 \\mathbf I \\mathbf A'))\\\\\n\\implies & \\OLS \\sim N(\\bet , \\sigma^2\\underbrace{(\\Xm'\\Xm)^{-1}\\Xm\\Xm'}_{\\mathbf I}(\\Xm'\\Xm)^{-1})\\\\\n\\implies & \\OLS \\mid \\Xm\\sim N(\\bet , \\sigma^2(\\Xm'\\Xm)^{-1})\n\\end{align*}\n\nTo verify this, we can simulate 50,000 estimates for the model Gaussian linear model where $\\beta = [2,4]'$, and $\\sigma^2 = 1$. We'll pick a modest sample size of $n=5$ to emphasize that this is the precise distribution of $\\OLS$, not just the asymptotic distribution. Because this distribution is conditional on $\\Xm$, we'll fix the realization $\\Xm=\\X$ over the simulations.\n\n```{r}\niter <- function(beta, X, e_sigma, s){\n  e <- rnorm(nrow(X), 0, e_sigma)\n  y <- X %*% beta + e\n  output <- OLS(y, X) %>% \n    mutate(\n      iter_num = s,\n      true_value = beta\n    )\n  return(output)\n}\n\nsim <- function(N, n, beta, dist_X, dist_X_params, e_sigma){\n  # draw a single X which will be fixed across iterations\n  x <- do.call(dist_X, append(n, dist_X_params))\n  X <- cbind(1, x)\n  \n  estimates <- 1:N %>% \n    map(iter, beta = beta, X = X, e_sigma = e_sigma) %>% \n    bind_rows()\n  \n  \n  output <- list(\n    \"estimates\" = estimates,\n    \"X\" = X,\n    \"e_sigma\" = e_sigma\n  )\n    \n  return(output)\n}\n\nresults <- sim(5e4, 5, c(2,4), runif, list(0,10), 1)\n```\n\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| warning: false\n#| label: fig-plot511\n#| message: false\n#| fig-asp: 1\n#| fig-width: 11\n#| fig-cap: \"The simulated marginal density of our estimators and their simulated joint density (along with the true underlying distributions shown in red)\"\n#| code-summary: \"Show code which generates figure\"\n\nVar <- results$e_sigma * solve(t(results$X) %*% results$X)\nbeta_true <- results$estimates %>% \n  select(true_value) %>% \n  distinct() %>% \n  unlist() %>% \n  as.numeric()\n\nnorm_overlay <- results$estimates %>% \n  group_by(parameter, true_value) %>% \n  summarize(\n    inf = min(estimate),\n    sup = max(estimate) \n  ) %>% \n  ungroup() %>% \n  mutate(domain = map2(inf, sup, \\(x, y) seq(x, y, length = 1000))) %>% \n  unnest(domain) %>% \n  mutate(\n    parameter_num = extract_numeric(parameter),\n    norm_val = pmap_dbl(\n      list(domain, true_value, parameter_num), \n      \\(x, y, z) dnorm(x, mean = y, sd = sqrt(Var[z,z]))\n    ) \n  )\n  \np1 <- results$estimates %>% \n  ggplot(aes(estimate)) +\n  geom_histogram(aes(y = ..density..), color = \"black\", fill = \"white\", bins = 50) + \n  geom_line(data = norm_overlay, aes(domain, norm_val), color = \"red\") +\n  facet_wrap(~parameter, scales = \"free\") + \n  theme_minimal()\n\n\nnorm_overlay <- results$estimates %>% \n  group_by(parameter, true_value) %>% \n  summarize(\n    inf = min(estimate),\n    sup = max(estimate) \n  ) %>% \n  ungroup() %>% \n  mutate(domain = map2(inf, sup, \\(x, y) seq(x, y, length = 1000))) %>% \n  unnest(domain) %>% \n  select(parameter, domain) %>% \n  mutate(parameter = case_match(parameter, \"β1 estimate\" ~ \"x\", \"β2 estimate\" ~ \"y\")) %>% \n  pivot_wider(names_from = parameter, values_from = domain) %>% \n  unnest()\n\nnorm_overlay <- expand_grid(x = norm_overlay$x, y = norm_overlay$y) %>%   \n  mutate(norm_val = map2_dbl(x, y, \\(x, y) dmvnorm(c(x,y), beta_true, Var)))\n\np2 <- results$estimates %>% \n  select(parameter, estimate) %>% \n  mutate(parameter = case_match(parameter, \"β1 estimate\" ~ \"x\", \"β2 estimate\" ~ \"y\")) %>% \n  pivot_wider(names_from = parameter, values_from = estimate) %>% \n  unnest() %>% \n  ggplot(aes(x, y)) +\n  geom_point(size = 0.1) + \n  geom_contour(data = norm_overlay, aes(x,y, z= norm_val), bins = 20, color = \"red\", size = .3) +\n  theme_minimal() +\n  labs(x = \"β1 estimate\", y = \"β2 estimate\")\n\nggarrange(p1, p2, ncol = 1)\n```\n\n:::\n\nIf we abandon the assumption that $\\ep\\mid\\X\\sim N(\\zer,\\sigma^2\\mathbf I)$ we are back to the standard (Gauss-Markov) linear model. All the assumptions about or model take the form of moment conditions, and not specific distributions, so we will not be able to calculate the exact distribution of $\\OLS$ in general. Fortunately we can use our asymptotic toolkit to find the limiting distribution of $\\OLS$.\n\nThe overwhelming majority of the time, estimators will be root-n consistent, so the best starting point of finding the asymptotic distribution of an estimator is by first calculating $\\sqrt{n}(\\hat{\\thet} - \\thet)$. In the case of the OLS estimator:\n\\begin{align*}\n\\sqrt{n}(\\OLS - \\bet) & = \\sqrt{n}[\\bet + (\\Xm'\\Xm)^{-1}\\Xm\\ep] - \\bet\\\\\n& = \\sqrt{n}(\\Xm'\\Xm)^{-1}\\Xm\\ep \\\\ \n& = \\sqrt{n}\\left(\\frac{\\Xm'\\Xm}{n}\\right)^{-1}\\left(\\frac{\\Xm'\\ep}{n}\\right)\\\\\n& = \\left(\\frac{\\Xm'\\Xm}{n}\\right)^{-1}\\left(\\frac{\\Xm'\\ep}{\\sqrt{n}}\\right)\\\\\n& = \\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}\\left(\\frac{1}{\\sqrt n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)\n\\end{align*}\nWhether you want to show the result using the matrix form of $\\OLS$ or the form which is sums of vector is a matter of preference. Regardless, the first term will converge to its population counterpart $\\E{\\X'\\X}$. The second term is a bit more interesting. We have \n$$\\left(\\frac{1}{\\sqrt n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right) = \\sqrt n \\left(\\frac{1}{ n}\\sum_{i=1}^n\\X_i'\\varepsilon_i - \\zer\\right) =  \\sqrt n \\left(\\frac{1}{ n}\\sum_{i=1}^n\\X_i'\\varepsilon_i - \\E{\\X_i'\\varepsilon_i}\\right),$$ but this is the precise expression which the CLT applies to, so we have:\n\\begin{align*}\n\\left(\\frac{1}{\\sqrt n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right) &\\dto N(\\E{\\X_i'\\varepsilon_i}, \\var{\\textstyle \\sum_{i=1}^n\\X_i'\\varepsilon_i}/n)\\\\\n& \\dto N(\\zer, \\textstyle \\sum_{i=1}^n\\sigma^2\\E{\\X'\\X}/n)\\\\\n& \\dto N(\\zer, \\sigma^2\\E{\\X'\\X})\n\\end{align*}\nbecause $\\X_i'\\varepsilon_i$ is an iid sample. Using this fact along with Slutsky's theorem and the LLN gives us the distribution of $\\OLS$.\n\\begin{align*}\n\\sqrt{n}(\\OLS - \\bet) & =\\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}}_{\\pto\\E{\\X'\\X}^{-1}}\\underbrace{\\left(\\frac{1}{\\sqrt n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)}_{\\dto N(\\zer, \\sigma^2\\E{\\X'\\X})}\\\\\n& \\dto \\E{\\X'\\X}^{-1}N(\\zer, \\sigma^2\\E{\\X'\\X})\\\\\n& = N(\\zer, \\E{\\X'\\X}^{-1}\\sigma^2\\E{\\X'\\X}[\\E{\\X'\\X}^{-1}]')\\\\\n& = N(\\zer, \\E{\\X'\\X}^{-1}\\sigma^2\\E{\\X'\\X}\\E{\\X'\\X}^{-1})\\\\\n& = N(\\zer, \\sigma^2\\E{\\X'\\X}^{-1})\n\\end{align*}\n\nIf we express the variance in terms of the random matrix $\\Xm$ instead of the random vector of covariates using the equality $\\E{\\X'\\X} = \\E{\\Xm'\\Xm}/n$, we have \n\n$$\\sqrt{n}(\\OLS - \\bet) \\dto N(\\zer, \\sigma^2(\\E{\\Xm'\\Xm}/n)^{-1})= N(\\zer, \\sigma^2n\\E{\\Xm'\\Xm}^{-1}) $$\n\n:::{#thm-asymols}\n\n## Asymptotic Distribution of OLS\n \nSuppose $P_{\\bet,\\sigma^2}\\in \\mathcal P_\\text{LM}$ where $\\E{\\X'\\ep} = \\zer$, $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\ep\\ep'} = \\sigma^2\\mathbf I$. Then\n$$ \\OLS \\asim N\\left(\\bet,\\sigma^2\\E{\\Xm'\\Xm}^{-1}\\right) = N\\left(\\bet, \\frac{\\sigma^2}{n}\\E{\\X'\\X}^{-1}\\right). $$\n:::\n\nWe have stated the asymptotic distribution without conditioning on $\\Xm$, so $\\avar{\\OLS}$ will be in terms of the expectation of $\\Xm$ opposed to some fixed $\\Xm$. We only appealed to the assumption $\\E{\\ep\\ep'} = \\sigma^2\\mathbf I$ to simplify the asymptotic variance, so in the event $\\E{\\ep\\ep'} \\neq \\sigma^2\\mathbf I$, our estimator will still be root-n CAN, albeit with a different asymptotic variance (we will show this in Section \\@ref(generalized-least-squares)). Depending on the level of technical rigor the assumptions which give this result may differ. I followed the derivation provided by  @wooldridge2010econometric, but others will delineate regularity conditions on $\\Xm$ so it is \"well-behaved\", or impose assumptions about the behavior of errors as a martingale. These assumptions tend to be rather weak and will hold in many practical applications. We also could extend this result to data which are not independent using the Lindeberg-Feller CLT.     \n\n:::{#exm-}\nConsider the case where $\\beta = 2$, $\\varepsilon_i \\iid \\text{Uni}(-1,1)$, $X \\sim \\text{Uni}(-5,5)$, $\\varepsilon\\perp X$, and $Y= 2X + \\varepsilon$. By properties of the uniform distribution,^[For $A \\sim \\text{Uni}(a,b)$, we have $\\var{A} = (b-a)^2/12$ and $\\E{A} = (b-a)/2$. By the definition of variance we have $\\E{A^2} = \\var{A} + \\E{A}^2 = (b-a)^2/12 + \\left[(b+a)/2\\right]^2 = (a^2+ab+b^2)/3.$ ] \n\\begin{align*}\n\\sigma^2 &= \\frac{1}{3},\\\\\n\\E{X^2} & = \\frac{25}{3}.\n\\end{align*}\nIf simulate realizations of $\\hat\\beta$ for a sufficiently large $n$, we should expect it to approximately follow a normal distribution with mean $2$ and variance:\n$$\\frac{\\sigma^2}{n}\\E{\\X'\\X}^{-1} =  \\frac{1/3}{n} \\E{X^2}^{-1} = \\frac{1}{3n}(25/3)^{-1} = \\frac{1}{25n}.$$\nLet's perform 10,000 simulations for sample sizes $n\\in\\{3,5,8,10\\}$.\n\n```{r}\niter <- function(slope, n, dist_vec, dist_params_list, s){\n  df <- sim_linear_model(\n    # set true intercept to be 0, and pass single \"slope\" parameter\n    beta = c(0,slope),\n    n = n,\n    dist_vec = dist_vec,\n    dist_params_list = dist_params_list\n  )\n  # exclude column of 1s from regressors \n  output <- OLS(df$y, df$X[,-1]) %>% \n    mutate(\n      iter_num = s,\n      sample_size = n\n    )\n  return(output)\n}\n\nsim <- function(N, slope, n, dist_vec, dist_params_list){\n  output <- 1:N %>% \n    map(iter, slope = slope, n = n, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\n\nouter_sim <- function(n_vals, N, slope, dist_vec, dist_params_list){\n  output <- n_vals %>% \n    map(sim, N = N, slope = slope, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\nresults <- outer_sim(\n    n_vals = c(3, 5, 8, 10), \n    N = 1e4, \n    slope = 2,  \n    dist_vec = c(runif, runif), \n    dist_params_list = list(list(-5,5), list(-1, 1))\n  )\n```\n\nAs $n$ increases we should see the bias of our estimator shrink, and the simulated variance approach $1/25n$. \n\n```{r}\n#| echo: false\nresults %>% \n  group_by(sample_size) %>% \n  summarize(\n    Bias = mean(estimate) - 2,\n    `Simulated Variance` = var(estimate),\n  ) %>% \n  mutate(`Limiting Variance` = 1/(25*sample_size)) %>% \n  knitr::kable()\n```\n\nMore importantly (because we knew how to calculate the bias and asymptotic variance of $\\OLS$ prior to deriving its limiting distribution), if we use our estimates to make a Q-Q plot, we see that as $n$ increases our estimates fit a normal distribution increasingly well. \n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| warning: false\n#| message: false\n#| fig-asp: 1\n#| fig-width: 11\n#| fig-cap: \"\"\n#| code-summary: \"Show code which generates figure\"\n\nresults %>% \n  ggplot(aes(sample = estimate)) +\n  facet_wrap(~sample_size) +\n  stat_qq_line(color = \"red\") +\n  stat_qq(size = 0.2) +\n  theme_minimal() + \n  ylim(0,3)\n```\n\nEven for modest sample sizes such as $n=10$, it's clear that our estimates are approximately normally distributed. \n:::\n\n## Estimating $\\avar{\\OLS}$\n\nWe've spent so much time considering the estimation of $\\bet$, and completely ignored the other parameter of our model -- $\\Sig$. In the case of the Gauss-Markov assumptions, $\\Sigma = \\sigma^2\\mathbf I$, so estimating $\\Sig$ simplifies to estimating $\\sigma^2$. \n\nA natural suggestion for the estimator would be  \n$$\\frac{1}{n-1}\\sum_{i=1}^n(e_i - \\underbrace{\\E{e_i}}_0)^2 =   \\frac{1}{n-1}\\sum_{i=1}^ne_i^2 =\\e'\\e$$ for realizations $\\e$ of the random variable $\\ep$. This was our approach to calculating the standard error associated with the mean when we didn't know the population variance, but it is a nonstarter in this case because we don't observe $\\ep$. So right from the start, we need to think of a way to estimate $\\e$. The immediate candidate are the observed errors associated with the estimator $\\OLS$. This estimator for $\\e$ can be defined as \n\n\\begin{align*}\n\\hat{\\e} & = \\Y - \\Xm\\OLS,\\\\\n& = \\Y - \\Xm(\\Xm'\\Xm)^{-1}\\X'\\Y,\\\\\n& = (\\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm')\\Y.\n\\end{align*}\n\n:::{#def-}\nThe <span style=\"color:red\">**_(least squares) residuals_**</span> associated with the estimator $\\OLS$ are defined as \n$$ \\hat{\\e}(\\Y,\\Xm) = \\Y - \\Xm\\OLS = \\mathbb M\\Y,$$ where $\\mathbb M = \\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm'$. \nThe estimated residuals associated with observations $(\\y, \\X)$ is \n$$ \\hat{\\e}(\\y,\\X) =\\y - \\X\\hat{\\mathbf{b}}_\\text{OLS}= \\mathbf M\\y.$$\n:::\n\nTo estimate $\\var{\\ep\\mid \\Xm} = \\E{\\ep\\ep'\\mid \\Xm}$, let's appeal to the analogy principle and inspect its sample counterpart, only do so using the residuals $\\hat{\\e}$. To do this, we'll need a few quick results, the proofs of which are applications of linear algebra and can be found in @greene2003econometric.\n\n:::{#lem-}\n\n## Properties of Residuals\n\nLet the estimator $\\hat{\\e}$ be the least squared residuals. Then:\n\n1. $\\mathbb M$ is symmetric ($\\mathbb M'=\\mathbb M$) and idempotent ($\\mathbb M^2=\\mathbb M$). Together these imply that $\\mathbb M'\\mathbb M= \\mathbb M$.\n2. $\\text{tr}(\\ep'\\mathbb M\\ep) =\\text{tr}(\\mathbb M\\ep'\\ep)$ where $\\text{tr}(\\mathbf A)= \\sum_{i=1}^n \\text{diag}(\\mathbf A)$\n:::\n\nThe matrix $\\mathbb M$ satisfies $\\mathbb M\\Xm =\\zer$: \n$$\\mathbb M\\Xm =(\\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm')\\Xm =\\Xm -  \\Xm\\underbrace{(\\Xm'\\Xm)^{-1}\\Xm'\\Xm}_{\\mathbf I} = \\zer .$$\n\nThe sample analog of $\\ep'\\ep$, using residuals as estimates for $\\e$, is: \n\n\\begin{align*}\n\\hat{\\e}'\\hat{\\e} &= \\Y\\mathbb M'\\mathbb M\\Y \\\\ \n& = [\\Xm\\OLS + \\ep]\\mathbb M[\\Xm\\OLS + \\ep] & (\\Y = \\Xm\\OLS + \\ep,\\ \\mathbb M'\\mathbb M =\\mathbb M)\\\\\n& = \\ep' \\mathbb M\\ep & (\\mathbb M\\Xm =\\zer)\\\\\n\\end{align*}\n\nThe expectation of this estimator is\n\\begin{align*}\n\\E{\\hat{\\e}'\\hat{\\e}} &= \\E{\\E{\\hat{\\e}'\\hat{\\e} \\mid \\Xm}} \\\\ \n& = \\E{\\E{\\ep' \\mathbb M\\ep \\mid \\Xm}}\\\\\n& = \\E{\\E{\\text{tr}(\\ep' \\mathbb M\\ep) \\mid \\Xm}} & (\\ep' \\mathbb M\\ep\\text{ is a scalar})\\\\\n& = \\E{\\E{\\text{tr}( \\mathbb M\\ep'\\ep) \\mid \\Xm}} & (\\text{tr}(\\ep'\\mathbb M\\ep) =\\text{tr}(\\mathbb M\\ep'\\ep))\\\\\n& = \\E{\\mathbb M(\\text{tr}\\E{\\ep'\\ep \\mid \\Xm})} & (\\mathbb M\\text{ is a function of }\\Xm)\\\\\n& = \\text{tr}(\\mathbb M \\sigma^2 \\mathbf I) \\\\\n& = \\sigma^2 \\text{tr}(\\mathbb M) \\\\ \n& = \\sigma^2 \\text{tr}(\\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm')\\\\\n& = \\sigma^2 \\text{tr}(\\mathbf I) - \\text{tr}((\\Xm'\\Xm)^{-1}\\Xm\\Xm')\\\\\n& = \\sigma^2(n-K)\n\\end{align*}\n\nMuch like the estimator $n^{-1}\\sum_{i=1}^n(X_i - \\bar X)^2$ for some $\\var{X}$, our estimator for the variance of our residuals is biased. If we correct for this bias, we have \n$$ S^2 = \\frac{\\hat{\\e}'\\hat{\\e}}{n-K}.$$ This correction follows from the same intuition behind Bessel's correction. Bessel's correction accounted for the estimation of population variance have two steps: first we estimate $\\bar X$ because we do not know $\\mu = \\E{X}$, and then we use this intermediate estimate to calculate the sample variance. We're doing precisely the same thing when estimating the variance of our errors. It requires an intermediate step where we estimate $\\OLS$, and then we use our estimated value to calculate $\\hat{\\e}'\\hat{\\e}/(n-K)$. The estimator $\\OLS$ is a $K-$vector, so we need to correct for each dimension. \n\n:::{#prp-olsvar}\n\n## Estimation of OLS Variance\n\nDefine the estimator $$S^2 =  \\frac{\\hat{\\e}'\\hat{\\e}}{n-K}$$ in the context of the classic linear model. Then:\n\n1. $S^2$ is an unbiased for $\\var{\\ep\\mid\\X} = \\sigma^2$.\n2. $S^2$ is a consistent estimator $\\var{\\ep\\mid\\X} = \\sigma^2$.\n3. The estimator $\\widehat{\\text{Avar}}(\\OLS) = S^2(\\Xm'\\Xm)^{-1}$ is a consistent estimator for \n${\\text{Avar}}(\\OLS) = \\sigma^2\\E{\\Xm'\\Xm}^{-1}$\n:::\n\n\n:::{.proof}\n<span style=\"color:white\">space</span>\n\n1. This follows from our derivation of the estimator: $$\\E{S^2} = \\E{\\hat{\\e}'\\hat{\\e}}/(n-K) = [\\sigma^2/(n-K)]/(n-K) = \\sigma^2.$$\n2. We have:\n\\begin{align*}\nS^2 & = \\E{\\hat{\\e}'\\hat{\\e}}/(n-K)\\\\\n& = \\frac{1}{n-K}\\E{\\ep'\\mathbb M\\ep}\\\\\n& = \\frac{1}{n-k}[\\ep'(\\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm')\\ep]\\\\\n& = \\frac{1}{n-k}[\\ep'\\ep - \\ep' \\Xm(\\Xm'\\Xm)^{-1}\\Xm'\\ep]\\\\\n& = \\frac{n}{n-k}\\left[\\frac{\\ep'\\ep}{n} - \\frac{\\ep' \\Xm}{n}\\frac{(\\Xm'\\Xm)^{-1}}{n}\\frac{\\Xm'\\ep}{n}\\right]\\\\\n& = \\underbrace{\\frac{n}{n-k}}_{\\to 1}\\Bigg[\\underbrace{\\frac{1}{n}\\sum_{i=1}^n \\varepsilon_i^2}_{\\pto \\sigma^2} - \\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\varepsilon_i\\X_i\\right)}_{\\pto \\zer}\\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\X_i\\right)^{-1}}_{\\pto \\E{\\X'\\X}^{-1}}\\underbrace{\\left(\\frac{1}{n}\\sum_{i=1}^n\\X_i'\\varepsilon_i\\right)}_{\\pto \\zer} \\Bigg] & (\\text{LLN})\\\\\n& \\pto 1(\\sigma^2 - \\zer\\E{\\X'\\X}^{-1}\\zer) & (\\text{Slutsky's theorem})\\\\\n& = \\sigma^2\n\\end{align*}\n\n3. We can now use the fact that $S^2\\pto \\sigma^2$ along with Slutsky's theorem:\n\n$$ \\widehat{\\text{Avar}}(\\OLS) = \\underbrace{S^2}_{\\pto \\sigma^2}[\\underbrace{(\\Xm'\\Xm)}_{\\pto n\\E{\\X'\\X}}]^{-1} \\pto \\sigma^2[n\\E{\\X'\\X}]^{-1}=\\frac{\\sigma^2}{n}\\E{\\X'\\X}^{-1}={\\text{Avar}}(\\OLS). $$\n:::\n\n## Basic Model Selection and Inference\n\nWe've been operating under the assumption that we know the true model $\\mathcal P_\\text{LM}$, but in reality knowing this is impossible. In fact, a common aphorism in statistics is that \"all models are wrong\", because the world is too complex to systematically describe any phenomenon. This is especially true of the social sciences. Fortunately, the full aphorism is \"all models are wrong...but some are useful.\" Even if models are approximations of reality, they offer insights into the world. So how do we pick the right one?\n\nIn the context of $\\mathcal P_\\text{LM}$, this question amounts to considering the random vector of regressors $\\X$. Even if our model is founded in rigorous economic theory, it still may be unclear which independent variables are pertinent. In Example \\@ref(exm:car), we considered a model where an agent $i$ got utility $u_{ij}$ from purchasing a car $j$, assuming that their utility function took the form $u_{ij}=\\X_{ij}\\bet + \\varepsilon_i$ for a vector of vehicle and consumer attributes $\\X_{ij}$ where $\\varepsilon_i$ corresponds to heterogeneity. It is up to us to determine which variables to include in $\\X_{ij}$. Attributes likes vehicle price, consumer location, whether a car is new or used, and model year of the car likely affect a consumers utility. But what about things like car color, technical specifications like a vehicles torque? There is no cut and dry answer to this, hence the black hole that is literature regrading model select. For now, we will take a basic approach to model selection rooted in methods introduced in \\@ref(hypothesis-testing).\n\nConsider two models $\\mathcal P_\\text{LM}$ and $\\mathcal P_\\text{LM}'$:\n\n\\begin{align*}\n\\mathcal P_\\text{LM}&: Y = \\beta_0 + \\beta_1 X_1 + \\varepsilon\\\\\n\\mathcal P_\\text{LM}'&: Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\varepsilon\n\\end{align*} \n\nThese models are referred to as **_nested models_**, because the parameter space corresponding to $\\mathcal P_\\text{LM}$ is a subset of the parameter space corresponding to $\\mathcal P_\\text{LM}'$. If we are tasked with choosing between these two models, we can estimate $\\mathcal P_\\text{LM}'$ and test the hypothesis $H_0:\\beta_2 = 0$. If we find sufficient evidence to reject this null hypothesis, than $\\beta_2$ is likely nontrivial and should be included in the model, prompting us to favor $\\mathcal P_\\text{LM}'$. \n\nIn general, suppose you want to test $H_0:\\beta_j = \\beta_{0}$. We established that $\\OLS$ is root-n CAN so we can use the $t-$test discussed in @sec-tsting to test this hypothesis. The statistic would be \n$$ t = \\frac{\\hat\\beta_{\\text{OLS},j} - \\beta_0}{\\widehat{\\text{se}}(\\hat\\beta_{\\text{OLS},j})}.$$ This statistic relies on a consistent estimator $\\widehat{\\text{se}}(\\hat\\beta_{\\text{OLS},j})$, but this is given immediately by our consistent estimator $\\widehat{\\text{Avar}}(\\OLS) = S^2(\\Xm'\\Xm)^{-1}$. \n\n$$\\widehat{\\text{se}}(\\OLS) = \\left[\\text{diag}(S^2(\\Xm'\\Xm)^{-1})\\right]^{1/2}.$$ In the context of model selection, our default hypothesis is $H_0:\\beta_j = \\beta_0$ -- is the addition of $\\beta_j$ in our specification nontrivial? This is why if you run a regression using almost any statistical software, it will automatically report the results associated with the hypotheses $H_0:\\beta_j = 0$ for each separate $\\beta_j$.   \n\n\n\n\n:::{#exm-}\n\n## Coding Exercise\n\nNow that we know how to estimate and draw inferences about $\\bet$, let's return to our ```OLS()``` function which we first defined in Example \\@ref(exm:funref). Along with calculating $\\OLS$, let's calculate $\\widehat{\\text{se}}(\\OLS)$, the $t$-statistic associated with testing $K$ null hypotheses $\\beta_j = 0$ (separately) at a significance level of $\\alpha = 0.05$, a 95% confidence interval for $\\bet$, and the associated $p-$value.\n\n```{r}\nOLS <- function(y, X){\n  #if X is just one column vector, format it as a matrix\n  if(is.null(ncol(X))){\n    X <- matrix(X)\n  }\n  \n  #determine dimensions, confirm estimate exists, perform OLS\n  n <- length(y)\n  K <- coalesce(ncol(X), 1)\n  if(det(t(X) %*% X) == 0) {stop(\"rank(X'X) < K\")}\n  hat_beta <- as.numeric(solve(t(X) %*% X) %*% t(X) %*% y)\n  \n  #use OLS estimates to calculate residuals and estimate SEs\n  res <- (y-X %*% hat_beta)\n  S2 <- ((t(res) %*% res)/(n - K)) %>% as.numeric() \n  var_hat <- (S2) * solve( t(X) %*% X )\n  se_hat <- sqrt(diag(var_hat))\n  \n  #t-stat, confidence intervals, p values\n  t <- hat_beta/se_hat\n  lower_CI <- hat_beta - qnorm(0.975)*se_hat\n  upper_CI <- hat_beta + qnorm(0.975)*se_hat\n  p_val <- 2*(1 - pt(t, n-K))\n  \n  #combine everything into a table to return\n  output <- tibble(\n    parameter = paste0(\"β\", 1:K),\n    estimate = hat_beta,\n    std_error = se_hat,\n    t_stat = t,\n    lower_95_CI = lower_CI,\n    upper_95_CI = upper_CI,\n    p_value = p_val\n  )\n  return(output)\n}\n```\n\nWe'll estimate the model given by $\\bet = [2,5,4,3,6]'$, $\\X \\sim N(\\zer, \\mathbf I)$, $n = 15$, and $\\varepsilon\\iid \\text{Uni}(-1,1)$. Before we use our ```OLS()``` function, let's see what R's base function ```lm()``` (which stands for \"linear model\") give us.\n\n```{r}\nresults <- sim_linear_model(\n  c(2,5,4,3,6), \n  15,     \n  dist_vec = c(rmvnorm, runif), \n  dist_params_list = list(list(rep(0,4), diag(1,4)), list(-1, 1))\n)\n\n#base R function, -1 to omit intercept which we added a column for\nlm(y ~ x1 + x2 + x3 + x4 + x5 - 1, results$observed_data) %>% \n  tidy()\n```\n\nNow for our function.\n\n```{r}\nOLS(results$y, results$X)\n```\n\nThe outputs are virtually identical, so our function works perfectly!\n:::\n\nIf we want to test hypotheses jointly, we need to use the Wald test instead of the $t$-test. For some hypothesis $H_0:\\mathbf h(\\bet) = \\zer$ given by $\\mathbf h:\\mathbb R^K\\to\\mathbb R^q$, our statistic is \n$$W = \\mathbf h(\\OLS)'  \\left[\\frac{\\partial \\mathbf h}{\\partial\\bet}(\\OLS) \\widehat{\\text{Avar}}(\\OLS)\\frac{\\partial \\mathbf h}{\\partial\\bet}(\\OLS)'\\right]^{-1}\\mathbf h(\\OLS),$$ where $W \\asim \\chi_q^2$ under $H_0$. \n\n\n:::{#exm-ftest}\n\n## Linear Restrictions and theF-Test\n\nConsider the Gaussian linear model where all Gauss-Markov assumptions are met and $\\ep \\sim N(\\zer, \\sigma^2\\mathbf I)$, along with the linear hypothesis that $\\mathbf H\\bet = \\bet_0$ for a $q\\times K$ matrix $\\mathbf H.$ In this case the Wald statistic is \\begin{align*}\nW & = [\\mathbf H\\OLS - \\bet_0]'\\left[\\widehat{\\text{Avar}}({\\mathbf H\\OLS\\mid \\Xm})\\right]^{-1}[\\mathbf H\\OLS - \\bet_0]\\\\\n  & = [\\mathbf H\\OLS - \\bet_0]'[\\mathbf H\\widehat{\\text{Avar}}({\\OLS\\mid \\Xm})\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]\\\\\n  & = [\\mathbf H\\OLS - \\bet_0]'[S^2\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0] & \\left(\\widehat{\\text{Avar}}({\\OLS\\mid \\Xm}) = S^2 (\\Xm'\\Xm)^{-1}\\right)\\\\\n  & = \\frac{[\\mathbf H\\OLS - \\bet_0]'[\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{S^2}\n\\end{align*}\n\nTheorem 3.3 establishes that this statistic satisfies $W\\asim \\chi_q^2$, so if our sample size is too small we may not be able to use the Wald statistic. Could we instead leverage the fact that $\\ep \\sim N(\\zer, \\sigma^2\\mathbf I)$ to find the exact distribution of a similar statistic? We'll define a new statistic $F$ to be $W$ scaled by $1/q$.\n\\begin{align*}\nF &= \\frac{W}{q}\\\\\n  & = \\frac{[\\mathbf H\\OLS - \\bet_0]'[\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{S^2} \\cdot \\frac{1}{q} \\cdot 1 \\cdot 1\\\\\n  & = \\frac{[\\mathbf H\\OLS - \\bet_0]'[\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{S^2} \\cdot \\frac{1}{q} \\cdot \\frac{n-K}{n-K} \\cdot \\frac{\\sigma^2}{\\sigma^2}\\\\\n  & = \\frac{[\\mathbf H\\OLS - \\bet_0]'[\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{q\\sigma^2} \\left[\\frac{\\sigma^2(n-K)}{S^2}\\frac{1}{n-K}\\right]\\\\\n  & = \\left[\\frac{[\\mathbf H\\OLS - \\bet_0]'[\\sigma^2\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{q}\\right] \\div \\left[\\frac{\\frac{\\sigma^2(n-K)}{S^2}}{n-K}\\right]\n\\end{align*}\nUsing properties of quadratic forms and normal variables, it can be shown that each of these two terms are distributed according to a $\\chi^2$ distribution standardized by their degrees of freedom conditional of $H_0$ being true. The ratio of such random variables is the definition of the $F$-distribution! \n\\begin{align*}\nF &= \\left[\\frac{[\\mathbf H\\OLS - \\bet_0]'[\\sigma^2\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{q}\\right] \\div \\left[\\frac{\\frac{\\sigma^2(n-K)}{S^2}}{n-K}\\right]\\\\\n& \\sim \\frac{\\chi_q^2/q}{\\chi_{n-K}^2/(n-K)}\\\\\n& \\sim F_{q,n-K}.\n\\end{align*}\nIf we simplify the statistic $F$ we have \n$$ F = \\frac{W}{q} = \\frac{[\\mathbf H\\OLS - \\bet_0]'[S^2\\mathbf H(\\Xm'\\Xm)^{-1}\\mathbf H']^{-1}[\\mathbf H\\OLS - \\bet_0]}{q} \\sim F_{q,n-K},$$ and can test $\\mathbf H\\bet = \\bet_0$ with the **_$F-$test_**. Since $F_{q, n-K}\\dto \\chi_q^2$ as $n\\to\\infty$, asymptotically the F-test and Wald test are equivalent, *but* for small sample sizes the F-test is the better choice, *assuming normal errors*. \n\n```{r}\nwald_test <- function(H, alpha, y, X){\n  n <- length(y)\n  q <- nrow(H)\n  \n  model <- lm(y ~ X - 1)\n  beta_hat <- coef(model)\n  var_hat <- vcov(model)\n  W <- t(H %*% beta_hat) %*% solve(H %*% var_hat %*% t(H)) %*% (H %*% beta_hat) %>% \n    as.numeric()\n  \n  output <- tibble(\n    wald_stat = W,\n    sample_size = nrow(X),\n    dof = paste(q),\n    critical_value = qchisq(1-alpha, q),\n    decision = ifelse(wald_stat > critical_value, \"Reject H0\", \"Fail to Reject H0\"),\n    p_val = 1 - pchisq(wald_stat, q)\n  )\n  \n  return(output)\n}\n\nF_test <- function(H, alpha, y, X){\n  n <- length(y)\n  K <- ncol(X)\n  q <- nrow(H)\n  \n  output <- wald_test(H, alpha, y, X) %>% \n    select(wald_stat) %>%\n    mutate(\n      F_stat = wald_stat / q,\n      sample_size = n,\n      dof = paste0(\"(\", q, \",\", n-K,\")\"),\n      critical_value = qf(1-alpha, q, n-K),\n      decision = ifelse(F_stat > critical_value, \"Reject H0\", \"Fail to Reject H0\"),\n      p_val = 1 - pf(F_stat, q, n-K)\n    ) %>%\n    select(-wald_stat)\n  return(output)\n}\n\ncompare_F_wald <- function(H, alpha, beta, n, dist_vec, dist_params_list, t){\n  model <- sim_linear_model(beta, n, dist_vec, dist_params_list)\n  W <- wald_test(H, alpha, model$y, model$X) %>% \n    rename(stat = wald_stat) %>% \n    mutate(test = \"Wald\")\n  Ft <- F_test(H, alpha, model$y, model$X) %>% \n    rename(stat = F_stat) %>% \n    mutate(test = \"F\")\n  output <- W %>% \n    bind_rows(Ft) %>% \n    mutate(iter_num = t)\n  return(output)\n}\n\ncompare_F_wald_N_times <- function(N, H, alpha, beta, n, dist_vec, dist_params_list){\n  output <- 1:N %>% \n    map(compare_F_wald, H = H, alpha = alpha, beta = beta, n = n , dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\ncompare_F_wald_N_times_over_nvals <- function(n_vals, N, H, alpha, beta, dist_vec, dist_params_list){\n  output <- n_vals %>% \n    map(compare_F_wald_N_times, N = N, H = H, alpha = alpha, beta = beta, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\nresults <- compare_F_wald_N_times_over_nvals(\n    n_vals = c(10, 100, 500, 1e3, 1e4),\n    N = 1e4,\n    H = diag(5),\n    alpha = 0.05,\n    beta = c(0, 0, 0, 0, 0),\n    dist_vec = c(rmvnorm), \n    dist_params_list = list(\n      list(\n        mean = c(0, 0, 0, 0, 0),\n        sigma = diag(5)\n      )\n    )\n  )\n```\n\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| warning: false\n#| label: fig-plot5115\n#| message: false\n#| fig-asp: 0.7\n#| fig-width: 8\n#| fig-cap: \"The simulated marginal density of our estimators and their simulated joint density (along with the true underlying distributions shown in red)\"\n#| code-summary: \"Show code which generates figure\"\n\nresults %>% \n  group_by(test, sample_size) %>% \n  summarize(alpha = sum(stat > critical_value) / n()) %>% \n  ggplot(aes(sample_size, alpha, color = test)) + \n  geom_point(size = 5, alpha = 0.5) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(color = \"Test\", x = \"Sample Size, n\", y = \"Simulated α\") +\n  theme(legend.position = \"bottom\") +\n  scale_color_manual(values = c(\"red\", \"blue\"))\n```\n\n:::\n\nThe $F-$test is just a special case of the Wald test where we can derive an exact distribution of our test statistic. Most statistical softwares will present the $F-$stat associated with $H_0:\\bet = \\zer$ when you run a linear regression. This test corresponds to the hypothesis that our specification is completely wrong and none of the independent variables appear (jointly) relevant. Unfortunately, this test is not as robust as the Wald test, as it requires normal errors. \n\nThe next example is due to @greene2003econometric and shows how a Wald test can be used in the context of model selection.\n\n:::{#exm-}\n\n## Investement Model\n\nLet $I_t$ denote the investment in a fixed economy at time $t$. One linear model for investment specifies:\n$$ \\log I_t = \\beta_1 + \\beta_2 i_t + \\beta_3 \\Delta p_t + \\beta_4\\log Y_t + \\beta_5t + \\varepsilon_t$$ where $i_t$ is the nominal interest rate, $\\Delta p_t$ is the inflation rate, and $Y_t$ is real output. We've also included a time trend $t$ as an independent variable. Instead of the nominal interest rate, agents may care about the real (adjusted for inflation) interest rate $i_t - \\Delta p_t$. So perhaps investment is only affected by inflation insofar that inflation determines the real interest rate.^[It could be the case that investment is a function of real interest rates along with inflation if inflation has affects outside of that on the real interest rate.] If this is the case our model is \n$$ \\log I_t = \\beta_1 + \\beta_2 (i_t - \\Delta p_t) + \\beta_4\\log Y_t + \\beta_5t + \\varepsilon_t.$$ We can test if this second specification is favorable by estimating the first model, and then testing the hypothesis $H_0 : \\beta_2 + \\beta_3 = 0$. Let's perform a simulation where the null hypothesis is true, and perform to corresponding Wald test. For the sake of ease, we will assume everything is uniformly distributed instead of simulating values such that they are realistic in the economic context of the model. \n\n```{r}\nresults <- sim_linear_model(\n    beta = c(1,0.5,-0.5, 2, 0.1),\n    n = 1000,\n    dist_vec = c(runif, runif, runif, seq, runif), \n    dist_params_list = list(list(0, 10), list(0, 10), list(0, 10), list(1), list(-1, 1))\n  )\n\n\nhypothesis <- matrix(c(0,1,1,0,0), nrow = 1)\nwald_test(hypothesis, 0.05, results$y, results$X)\n```\nThe value of the Wald test stat is not even close to exceeding the critical value, so we fail to reject the null hypothesis and conclude that $\\beta_2 + \\beta_3 = 0$. To double-check our results, let's use the `linearHypothesis()` function from the `car` (Companion to Applied Regressions) package.\n\n```{r}\nresults$observed_data <- results$observed_data %>% \n  rename(\n    i = x2,\n    del_p = x3,\n    log_Y = x4,\n    t = x5,\n    I = y\n  )\n\nmodel <- lm(I ~ i + del_p + log_Y + t, results$observed_data)\nlinearHypothesis(model, \"i + del_p = 0\", test = \"F\")\n```\n\n:::\n\n## Partial/Marginal Effects, Linear Projection Revisited\n\nWhen interpreting the parameters $\\bet$ in $\\mathcal P_\\text{LM}$, it's very common to think in terms of derivatives. We will define these derivatives according to @wooldridge2010econometric.\n\n:::{#def-}\nSuppose $Y$ and $\\X = (X_1,\\ldots, X_K)$ are a random variable and vector, respectively. The <span style=\"color:red\">**_partial/marginal effect_**</span> of $X_j$ on $\\E{Y\\mid\\X}$ (sometimes called the partial effect of $X_j$ on $Y$), is $$ \\frac{\\partial \\E{Y\\mid\\X}}{\\partial X_j}.$$ In the event that $X_j$ is discrete, partial effects are given as the difference between $\\E{Y\\mid\\X}$ evaluated at two discrete values of $X_j$.\n:::\n\nIf we have a linear model $Y = \\X\\bet + \\ep$, we're almost conditioned to conclude the marginal effect of $X_j$ on $\\E{Y\\mid\\X}$ is $\\beta_j$, but in general this is not true. \n\n:::{#exm-}\nThis example is due to this [post](https://stats.stackexchange.com/questions/190703/non-linear-endogeneity/190800#190800). Suppose $Y=X\\beta + \\varepsilon$ where $X\\sim N(0,1)$ and $\\varepsilon = X^2 - 1$. To insure that $\\beta$ is identified, we need to verify that $\\E{\\varepsilon} = 0$ (we do not have an intercept) and $\\E{X\\varepsilon} =0$ (the multicollinearity assumption is trivially met). Note that $X^2\\sim \\chi_1^2$, so $\\E{X^2} = 1$. We also have $\\E{X^3} = 0$, as the normal distribution is not skewed (skewness being defined as the third moment centered about the mean).  \n\\begin{align*}\n\\E{\\varepsilon}&= \\E{X^2 - 1}= \\E{X^2} - 1 = 1 - 1 = 0\\\\\n\\E{X\\varepsilon}&= \\E{X^3 - X} = \\E{X^3} - \\E{X} = 0 - 0 = 0\n\\end{align*}\nOur model is identified. Furthermore $\\OLS$ will present consistent estimates of $\\beta$. For the sake of illustration, let $\\bet = 2$.\n\n```{r}\ndraw_Xe <- function(n, dist, dist_params){\n  X <- do.call(dist, append(n, dist_params))\n  e <- X^2 - 1\n  output <- matrix(c(X,e), nrow = n)\n  return(output)\n}\n\niter <- function(slope, n, dist_vec, dist_params_list, s){\n simulated_model <- sim_linear_model(\n    beta = c(0, slope),\n    n = n,\n    dist_vec = dist_vec,\n    dist_params_list = dist_params_list\n  ) \n output <- OLS(simulated_model$y, simulated_model$X[,-1]) %>% \n   select(estimate) %>% \n   mutate(\n     iter_num = s,\n     sample_size = n\n   )\n return(output)\n}\n\nsim <- function(N, slope, n, dist_vec, dist_params_list){\n  output <- 1:N %>% \n    map(iter, slope = slope, n = n, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\nouter_sim <- function(n_vals, N, slope, dist_vec, dist_params_list){\n  output <- n_vals %>% \n    map(sim, N = N, slope = slope, dist_vec = dist_vec, dist_params_list = dist_params_list) %>% \n    bind_rows()\n  return(output)\n}\n\nresults <- outer_sim((1:50)*100, 5e3, 2, c(draw_Xe), list(list(rnorm, list(0, 1))))\n```\n\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| warning: false\n#| message: false\n#| fig-asp: 1\n#| fig-width: 11\n#| fig-cap: \"\"\n#| code-summary: \"Show code which generates figure\"\nresults %>% \n  expand_grid(e = (1:5)/10) %>%\n  group_by(sample_size, e) %>% \n  summarize(prob = sum(abs(estimate - 2)>e)/n()) %>% \n  ggplot(aes(sample_size, prob, color = as.factor(e))) + \n  geom_line() +\n  labs(color = \"ε\", y = \"Pr(Norm > ε)\", x = \"Sample Size, n\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\nWe have estimated $\\beta = 2$ consistently, but this is not the partial effect! We have \n\n$$\\frac{\\partial \\E{Y\\mid X}}{\\partial X}= \\frac{\\partial}{\\partial X}\\E{X\\beta + \\varepsilon \\mid X} = \\frac{\\partial}{\\partial X}\\E{X\\beta + X^2 -1\\mid X} = \\frac{\\partial}{\\partial X}[X\\beta + X^2 - 1] = \\beta + 2X \\neq \\beta.$$ This follows from the fact that $X$ is only orthogonal to $\\varepsilon$, so $\\E{\\varepsilon\\mid X}\\neq 0$. \n:::\n\n In general, we can still have $\\E{X_i\\varepsilon_i} = 0$ for all $i$ where $\\varepsilon = g(\\X)$ for some nonlinear function $g$, because orthogonality only insures that our error and regressors are uncorrelated (i.e they have no linear relationship). What we need is exogeneity so we can conclude $$\\E{Y \\mid \\X} = \\E{\\X\\bet \\mid \\X} + \\underbrace{\\E{\\varepsilon \\mid \\X}}_{\\zer} = \\X\\bet,$$ so $$\\frac{\\partial \\E{Y\\mid \\X}}{\\partial X_j} = \\beta_j.$$ **_At the heart of this issue is the relationship between the linear projection model and the (structural) linear model_**.  Early on we emphasized that there was a difference between what we called the linear projection model and the linear model. The prior is concerned with the statistical association of $Y$ and $\\X$ and describes a feature of their joint density. Proposition \\@ref(prp:ceferr) established that by definition the error in this model, $\\varepsilon_c$, satisfied $\\E{\\varepsilon_c\\mid\\X} = \\zer$. In the case of the linear model, $\\varepsilon$ has a structural interpretation and may not satisfy this property, *but if it does* the linear projection model and the linear model will coincide in the sense that $\\bet$ is interpreted as a marginal effect. Some treatments of OLS, such as @cameron2005microeconometrics, actually restrict their attention to the identification of the linear model such that $\\bet$ is associated with a marginal effect, requiring strict exogeneity instead of orthogonality for identification. \n\n:::{#prp-}\n\n## Identification of Marginal Effects\n\nSuppose $\\Y = \\Xm\\bet + \\ep$ is a linear model. If $\\E{\\ep \\mid \\X} = \\zer$ and $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, then \n$$\\frac{\\partial \\E{Y\\mid \\X}}{\\partial \\X} = \\bet,$$ where $\\bet$ is identified.\n:::\n\n:::{.proof}\nIn this case, $\\bet$ is identified as $\\E{\\ep \\mid \\X} = \\zer$ implies $\\E{\\X'\\ep} = \\zer$, and we are given $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$.\n:::\n\nMore generally, if $\\mathbf f(\\X) = [f_1(\\X), \\ldots, f_K(\\X)]$ are a series of continuous functions of regressors, and $Y = \\mathbf f(\\X)\\beta + \\varepsilon$, then\n$$ \\frac{\\partial \\E{Y\\mid \\X}}{\\partial X_j} = \\frac{\\partial \\mathbf f}{\\partial X_j}\\bet = \\sum_{\\ell =1}^K\\frac{\\partial f_\\ell}{\\partial X_j} \\bet.$$ For example, if $Y = \\beta_1 + \\beta_2\\log X_1 + \\beta_3 \\exp[ X_1X_2] + \\varepsilon$ where $\\E{\\varepsilon \\mid X_1}=0$, then \n$$ \\frac{\\partial \\E{Y\\mid X_1}}{\\partial X_1} = \\frac{\\beta_1}{X_1} + \\beta_3X_2\\exp[X_1X_2].$$\n\n@reiss2007structural provide a more nuanced discussion of $\\frac{\\partial \\E{Y\\mid X}}{\\partial X}$ in the context of structural models, and how it relates the the linear projection model we discussed at the opening. \n\n## Frisch–Waugh–Lovell Theorem\n\nEven if our model contains multiple regressors concatenated in the vector $\\X$, we may be especially interested in a subset of regressors. For instance, in Example @exm-car we may be especially interested in the price of cars if we are a manufacturer, as estimating consumers' sensitivity to price changes could give us valuable insights into maximizing our profit. In situations like this, is it possible to \"ignore\" the independent variables of secondary importance? The answer, as provided by @frisch1933partial @lovell1963seasonal, is \"kind of\", and deals with the algebra of OLS. \n\nSuppose $\\Xm_1$ and $\\Xm_2$ are two random matrices of observations where $\\Xm= [\\Xm_1,\\Xm_2]$. If $\\bet =[\\bet_1,\\bet_2]'$, then \n$$ \\Y = \\Xm\\bet + \\ep = \\Xm_1\\bet_1 + \\Xm_2\\bet_2 + \\ep. $$ The first order condition associated with the least squares problem is now \n$$ \\begin{bmatrix}\\Xm_1'\\Xm_1 & \\Xm_1'\\Xm_2\\\\\\Xm_2'\\Xm_1 & \\Xm_2'\\Xm_2\\end{bmatrix} \\begin{bmatrix} \\hat{\\bet}_{\\text{OLS},1} \\\\ \\hat{\\bet}_{\\text{OLS},2} \\end{bmatrix} =  \\begin{bmatrix} \\Xm_1'\\Y \\\\ \\Xm_2'\\Y \\end{bmatrix}$$ \nIf we expand this, we have \n\\begin{align*}\n\\Xm_1'\\Xm_1\\hat{\\bet}_{\\text{OLS},1} + \\Xm_1'\\Xm_2\\hat{\\bet}_{\\text{OLS},2} = \\Xm_1'\\Y,\\\\\n\\Xm_2'\\Xm_1\\hat{\\bet}_{\\text{OLS},1} + \\Xm_2'\\Xm_2\\hat{\\bet}_{\\text{OLS},2} = \\Xm_2'\\Y.\n\\end{align*}\nIf we solve the first equation for $\\hat{\\bet}_{\\text{OLS},1}$, we have \n$$\\hat{\\bet}_{\\text{OLS},1} = (\\Xm_1'\\Xm_1)^{-1}\\Xm_1'(\\Y -\\Xm_2\\hat{\\bet}_{\\text{OLS},2}).$$ If we insert this into the second equation in our system, we have \n\\begin{align*}\n&\\Xm_2'\\Xm_1[(\\Xm_1'\\Xm_1)^{-1}\\Xm_1'(\\Y -\\Xm_2\\hat{\\bet}_{\\text{OLS},2})] + \\Xm_2'\\Xm_2\\hat{\\bet}_{\\text{OLS},2} = \\Xm_2'\\Y\\\\\n\\implies &  \\Xm_2'\\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1'\\Y -\\Xm_2'\\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1'\\Xm_2\\hat{\\bet}_{\\text{OLS},2} + \\Xm_2'\\Xm_2\\hat{\\bet}_{\\text{OLS},2} = \\Xm_2'\\Y\\\\\n\\implies &  \\hat{\\bet}_{\\text{OLS},2}[\\Xm_2'\\Xm_2 - \\Xm_2'\\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1'\\Xm_2]= \\Xm_2'\\Y - \\Xm_2'\\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1'\\Y\\\\\n\\implies & \\hat{\\bet}_{\\text{OLS},2}[\\Xm_2'(\\mathbf I - \\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1')\\Xm_2] = [\\Xm_2'(\\mathbf I - \\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1')\\Y]\\\\\n\\implies & \\hat{\\bet}_{\\text{OLS},2} = [\\Xm_2'(\\mathbf I - \\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1')\\Xm_2]^{-1}[\\Xm_2'(\\mathbf I - \\Xm_1(\\Xm_1'\\Xm_1)^{-1}\\Xm_1')\\Y]\n\\end{align*}\nRecalling that we defined a matrix $\\mathbb M =\\mathbf I - \\Xm(\\Xm'\\Xm)^{-1}\\Xm'$ such that $\\hat{\\e} = \\mathbb M\\Y$ where $\\mathbb M = \\mathbb M'$ and $\\mathbb M^2 = \\mathbb M$, we have \\begin{align*}\n\\hat{\\bet}_{\\text{OLS},2} &= [\\Xm_2'\\mathbb M_1\\Xm_2]^{-1}[\\Xm_2'\\mathbb M_1\\Y]\\\\\n& = [\\Xm_2'\\mathbb M_1'\\mathbb M_1\\Xm_2]^{-1}[\\Xm_2'\\mathbb M_1\\Y]\\\\\n& = [\\mathbb X_2^{*\\prime} \\mathbb X_2^{*}]^{-1}[\\Xm_2'\\Y^*] & (\\mathbb X_2^{*} = \\mathbb M_1\\Xm_2,\\ \\Y^* =\\mathbb M_1\\Y)\n\\end{align*}\nThe estimator $\\hat{\\bet}_{\\text{OLS},2}$ follows from regressing $\\mathbb M_1\\Xm_2$  on $\\mathbb M_1\\Y$, which correspond to the residuals $\\Xm_2 - \\Xm_1\\hat{\\boldsymbol\\gamma}_\\text{OLS}$ and $\\mathbf Y - \\Xm\\hat{\\bet}_{\\text{OLS},1}$.\n\n\n:::{#thm-}\n\n## Frisch–Waugh–Lovell Theorem\n\nFor the linear model, $\\Y = \\Xm\\bet + \\ep = \\Xm_1\\bet_1 + \\Xm_2\\bet_2 + \\ep$, \n$$\\hat{\\bet}_{\\text{OLS},2} = [\\mathbb X_2^{*\\prime} \\mathbb X_2^{*}]^{-1}[\\Xm_2'\\Y^*],$$ where $\\mathbb X_2^{*\\prime}$ and $\\Y^*$ are the residual vectors from least squares regression of $\\Xm_2$ and $\\Y$ on $\\Xm_1$, respectively. \n:::\n\nOne of the useful applications of this theorem deals with visualization. \n\n:::{#exm-}\nSuppose $Y = 1 + 4 X_1 + 2 X_2 + 8 X_3 + 3X_4 + \\varepsilon$. Let's estimate this model for simulated data. \n\n```{r}\nresults <- sim_linear_model(\n  c(1,4,2,8,3), \n  100,     \n  dist_vec = c(rmvnorm, runif), \n  dist_params_list = list(list(rep(0,4), diag(1,4)), list(-1, 1))\n)\n\nOLS(results$y, results$X)\n```\nIf we're interested in the $\\hat\\beta_{\\text{OLS},2}$, we may want to visualize it. Unfortunately, our parameter space is a subset of $\\mathbb R^5$, so it isn't feasible to plot the hyperplane correspond to our estimated model over our sample. Fortunately, we can use the Frisch–Waugh–Lovell Theorem.\n\n```{r}\n\nX1 <- results$X[,-2]\nbeta_hat_1 <- OLS(results$y, X1)$estimate\ny_res <- results$y - X1 %*% beta_hat_1 \n\nX2 <- results$X[,2]\ngamma_hat <- OLS(X2, X1)$estimate\nX2_res <- X2 - X1 %*% OLS(X2, X1)$estimate\n\nOLS(y_res, X2_res)\n```\n\nWe end up with the same estimate $\\hat\\beta_{\\text{OLS},2}$, and can visualize it by plotting the dependent and independent variables in this alternate regression.\n\n```{r}\n#| code-fold: true\n#| fig-align: center\n#| warning: false\n#| message: false\n#| fig-asp: 1\n#| fig-width: 11\n#| fig-cap: \"\"\n#| code-summary: \"Show code which generates figure\"\ntibble(\n  x = X2_res, \n  y = y_res\n) %>% \n  ggplot(aes(x,y)) +\n  geom_point() +\n  theme_minimal() +\n  geom_smooth(method = \"lm\", col = \"blue\", size = 0.5, se = FALSE) +\n  labs(x = \"x2 Residuals\", y = \"y Residuals\") \n```\n\nWhile our estimate is the same, the standard error associated with the estimate is not quite the same. For the first regression, we had $K = 5$ regressors, whereas the second had $K = 1$. This affects how $\\widehat{\\text{se}}(\\OLS)$ is calculated, as the numerator of $S^2$ which ensures it is unbiased is $n - K$. We have $\\widehat{\\text{se}}(\\OLS)\\propto \\sqrt{n-K}$, so if we scale the standard error in the second regression by $\\sqrt{(n - 1)/(n - 5)}$.\n\n```{r}\nincorrect_se <- OLS(y_res, X2_res)$std_error\nincorrect_se * sqrt((100-1)/(100-5))\n```\n\nDespite being well known, the relationship between the standard errors of each regression seem to have gone unformalized until @ding2021frisch.\n\n:::\n\n## Recap \n\nThe linear model, along with the array of assumptions and what they yield, can be quite a bit to take in. The following table shows the cumulative properties given by the addition of each assumption.\n\n|  $\\text{rank}\\left(\\E{\\X'\\X}\\right) = K$, $\\E{\\X'\\ep} = \\zer$|$\\E{\\ep\\mid \\Xm}= \\zer$|$\\E{\\ep\\ep'\\mid \\Xm}= \\sigma^2\\mathbf I$|$\\ep\\sim N(\\zer,\\sigma^2\\mathbf I)$|\n|-----------------------|-----------------------|-----------------------|------------|\n| $(\\bet,\\Sig)$ identified |$(\\bet,\\Sig)$ identified  |$(\\bet,\\sigma^2)$ identified | $(\\bet,\\sigma^2)$ identified |\n| $\\OLS\\pto\\bet$            | $\\OLS\\pto\\bet$              | $\\OLS\\pto\\bet$              | $\\OLS\\pto\\bet$   |\n| $\\OLS$ Asymptotically Normal | $\\OLS$ Asymptotically Normal | $\\OLS$ Asymptotically Normal | $\\OLS$ Normal     |\n|                       |  $\\OLS$ Unbiased              |  $\\OLS$ Unbiased              |  $\\OLS$ Unbiased   |\n| | $\\frac{\\partial \\E{Y\\mid \\X}}{\\partial \\X} = \\bet$ |  $\\frac{\\partial \\E{Y\\mid \\X}}{\\partial \\X} = \\bet$ |  $\\frac{\\partial \\E{Y\\mid \\X}}{\\partial \\X} = \\bet$      |\n|                       |                       |  $\\OLS$ BLUE                  |  $\\OLS$ BLUE       |\n\nWe also have maintained two implicit assumptions throughout: IID regressors, and the model is correctly specified.\n\n\n## Example/Replication {#rep1}\n\nChapter 4 of @greene2003econometric provides a useful exercise in the form of replication @christensen1976economies who estimate the economies of scale in US electrical power generation.\n\nIn response to rising electrical rates in the United States during the mid-20th century, @christensen1976economies consider whether vertically integrated electrical providers (who generate, transmit, and distribute electricity) should be disintegrated. If these firms could only generate electricity as a result of regulation, then these firms would have to compete to sell generated electricity to separate intermediary firms which would transmit and distribute it to consumers. This competition has the potential to lower prices. At the same time, perhaps the vertical integration of firms cuts costs, which may actually lead to better prices for consumers. To determine if this is the case, we can consider the economies of scale of firms. \n\nEconomies of scale refers to the phenomenon where the more quantity of a good a firm produces, the lower the costs associated with that production. A firms cost, $C$, will be a function of output $Q$, and prices of inputs $P_1,\\ldots,P_k$ used in production. We will specify our cost function as:\n\\begin{align*}\n\\log C &= \\alpha + \\beta\\log Q + \\gamma[(\\log Q)^2/2] + \\sum_{i=1}^k\\delta_i\\log P_i & (\\textstyle\\sum_{i=1}^k\\delta_i = 1)\n\\end{align*}\n\nThe functional form may look a bit arbitrary, but it's consistent with a handful of appealing properties we expect a cost function to exhibit, the most important of which being a U-shape in quantity corresponding to decreasing costs as quantity increases up to a point (economies of scale), followed by increasing costs. @christensen1973transcendental provide all the details about this functional form. This point is given as the minimum of $C$, which will coincide with the minimum of $\\log C$ because $\\log$ is a monotonic function. The first order condition for this minimization is \n\\begin{align*}\n&\\frac{\\partial \\log C}{\\partial \\log Q}  = 1, \\\\\n \\implies & \\beta + \\gamma \\log Q^* = 1,\\\\\n \\implies & Q^* = \\exp\\left(\\frac{1-\\beta}{\\gamma}\\right),\n\\end{align*}\nwhere the derivative is set to $1$ instead of $0$ because $\\log(0) = 1$. If we are able to estimate $(\\beta,\\gamma)$ we can calculate $Q^*$. If we observe $Q_i > Q^*$, for many firms $i,$ then the same output $Q$ could be produced at a lower cost if the market was comprised of a larger number of firms producing a smaller output. \n\nThe data from @christensen1976economies is available [here](https://pages.stern.nyu.edu/~wgreene/Text/Edition7/TableF4-4.txt).^[I did do some cleaning of the raw data beforehand.]\n\n```{r}\n#| message: false\nCG_1976 <- read_csv(\"data/christensen_greene_1976.csv\")\n```\n\nThe first few rows of the data give us an idea of what type of information we have.\n\n```{r}\n#| echo: false\nknitr::kable(head(CG_1976))\n```\n\nWe observe the unit prices of three inputs: capital, labor, and fuel. Taking these into account, the cost function becomes \n$$\\log C = \\alpha + \\beta\\log Q + \\frac{1}{2}\\gamma[(\\log Q)^2/2] + \\delta_k \\log P_k + \\delta_l \\log P_l + \\delta_f \\log P_f,$$ where $\\delta_k + \\delta_l + \\delta_f = 1$. We can rewrite out model to implicitly satisfy the constraint if we write $\\delta_f = 1 -\\delta_l - \\delta_f$: \n\n\\begin{align*}\n&\\log C = \\alpha + \\beta\\log Q + \\gamma[(\\log Q)^2/2] + \\delta_k \\log P_k + \\delta_l \\log P_l + (1 -\\delta_l - \\delta_f) \\log P_f\\\\\n\\implies & \\log C - \\log P_f= \\alpha + \\beta\\log Q + \\gamma[(\\log Q)^2/2] + \\delta_k( \\log P_k - \\log P_f) + \\delta_l (\\log P_l-\\log P_f) \\\\\n\\implies & \\log(C/P_f) = \\alpha + \\beta\\log Q +\\gamma[(\\log Q)^2/2] + \\delta_k \\log (P_k/P_f) + \\delta_l \\log (P_l/P_f)\n\\end{align*}\n\nThis model cannot account for all the possible factors which influence a firm's costs, so we will introduce the element $\\varepsilon$ to account for unobserved factors which influence cost, and assume that all our regressors are exogenous.^[Is this reasonable? Could it be the case that $P_k$, $P_l$, and/or $P_f$ are correlated with other input prices that we don't observe? How does the context of electrical power production impact this assumption?] This gives us our estimable model.\n$$ \\log(C/P_f) = \\alpha + \\beta\\log Q +\\gamma[(\\log Q)^2/2] + \\delta_k \\log (P_k/P_f) + \\delta_l \\log (P_l/P_f) + \\varepsilon$$\n```{r}\nCG_1976 <- CG_1976 %>% \n  mutate(\n    C = log(cost/fuel),\n    Q = log(output),\n    Q2 = Q^2/2,\n    P_kf = log(capital/fuel),\n    P_lf = log(labor/fuel)\n    )\n\nmodel <- lm(C ~ Q + Q2 + P_kf + P_lf, data = CG_1976)\nsummary(model)\n```\n\nWe can use our estimates $\\hat \\beta$ and $\\hat \\gamma$ to calculate $\\hat Q^*$.\n\n```{r}\nbeta_hat <- model$coefficients[2]\ngamma_hat <- model$coefficients[3]\nQ_hat <- exp((1-beta_hat)/gamma_hat)\nQ_hat\n```\n\nThe straightforward way of determining if costs are higher than they need to be as a result of vertical integration is by counting the number of firms for which $Q > \\hat Q^*$. This doesn't account for the degree to which firms are exceeding the efficient scale. To do this, let's consider the total output produced by firms which are exceeding the efficient scale, opposed to those which are not. \n\n```{r}\nCG_1976 %>% \n  mutate(inefficient = (output > Q_hat)) %>% \n  group_by(inefficient) %>% \n  summarize(\n    n_firms = n(),\n    total_output = sum(output)\n  ) %>% \n  mutate(prop_output = total_output/sum(total_output)) %>% \n  knitr::kable()\n```\n\n57% of output is attributed to the 25 firms producing over the efficient scale. This seems to indicate that the market is too vertically integrated.\n\n## Further Reading\n\n**Conditional Expectation and Linear Projection**: Chapter 2 of @wooldridge2010econometric, Chapter 2 of @hansen2022econometrics, Chapter 3 of @angrist2008mostly\n\n**Structural Modeling**: Chapter 1 of @greene2003econometric , @reiss2007structural, @goldberger1972structural, portions of Chapter 2 of @cameron2005microeconometrics \n\n**OLS**: Chapter 4 of @wooldridge2010econometric, Chapters 3-5 of @greene2003econometric,  portions of Chapter 1-2 of @hayashi2011econometrics\n\n**Model selection**: @phillips1996econometric @hansen2005challenges @leamer1978specification @hendry2000econometrics @davidson1981several @hendry1995dynamic\n\n## Numerical Analysis Appendix: Least Squares {#sec-nlaa}\n\nDefining our `OLS` function was painless with the real meat of the function being `solve(t(X) %*% X) %*% t(X) %*% y`. This makes it seem \nlike calculating $\\hat{\\bet}$ on a computer is identical to the process of calculating it by hand, after all we have an analytic solution for our estimates. Unfortunately, this is not the case. To see what is actually happening when we run `lm()` let's look at it's source code \n\n```{r}\nlm\n```\n\nAfter cleaning up inputs and making sure the model can be estimated, `lm` calls the method `lm.fit`. \n\n```{r}\nlm.fit\n```\n\nThe key line here is `z <- .Call(C_Cdqrls, x, y, tol, FALSE)`, which computes the estimates. It appears that *another* function is actually doing the work, and it is called `C_Cdqrls`. This function is defined [lm.c](https://github.com/wch/r-source/blob/trunk/src/library/stats/src/lm.c), and is R's \"proper\" source code for `lm` written in C (the subsequent functions are R functions that just format the results). As the documentation of this function indicates, it is relying on Fortran's `dqrls.f` ([here](https://github.com/wch/r-source/blob/trunk/src/appl/dqrls.f)). This gives us our first actual hint of how R solves the least squares problem. The documentation mentions a QR decomposition which is given by `dqrdc.f`, and *this* is the key to computing OLS estimates numerically. Let's switch gears and consider least squares purely as a linear algebra problem (modifying notation accordingly)\n\nAt some point in time when you were introduced to matrix inversion, you learned that calculating the inverse by hand is easy for $2\\times2$ matrices, much harder for $3\\times 3$ matrices, and *much much* harder for any larger matrices. In general, to calculate the inverse of an $n\\times n$ matrix $A$ by hand, you need to perform a sequence of row operations on $\\begin{bmatrix}A &I\\end{bmatrix}$ to reduce $A$ to $I$. The portion of the augmented matrix the original corresponding to $I$ should be the inverse, $\\begin{bmatrix}I &A^{-1}\\end{bmatrix}$. From a computational standpoint, we want to avoid calculating inverses like the plague. Instead we need to ask \"why am I calculating $A^-1$ in the first place\". The answer is likely to solve some system of the form $A\\x = b$. Instead of solving $A\\x=b$ directly with $A^{-1}$, we'll rewrite the system so solving it becomes trivial and doesn't require $A^{-1}$.\n\nOne type of linear system that we can solve without inverting a matrix is one that looks like:\n\\begin{align*}\nc_{11}x_{1} + c_{12}x_{2} + c_{13}x_{3} & = b_1\\\\\nc_{22}x_{2} + c_{23}x_{3} & = b_2\\\\\nc_{33}x_{3} & = b_3\n\\end{align*}\nThis can be solved with \"back-subtitution\". We have $x_3 = b_3/c_{33}$, which we can then use to solve for $$x_2 = \\frac{b_2-c_{23}x_3}{c_{22}} = \\frac{b_2-c_{23}(b_3/x_{33})}{c_{22}}.$$ This in turn can be substituted into the first equation to solve for $x_3$. The matrix representation of this system looks like\n$$\\begin{bmatrix} c_{11} & c_{12} & c_{13}\\\\ 0 & c_{22} & c_{23}\\\\ 0 & 0 & c_{31}\\end{bmatrix}$$ which happens to be an upper triangular matrix. If we are able to write the system $A\\x =b$ in terms of an upper triangular matrix, then we can perform back-substitution to solve for $\\x$. This is precisely what the [QR decomposition](https://en.wikipedia.org/wiki/QR_decomposition) allows us to do. \n\nAny $n\\times k$ matrix $A$ can be decomposed into the product of $n\\times k$ orthogonal matrix $Q$ and a $k\\times k$ upper triangular matrix $R$. For instance,\n$$\\begin{bmatrix} -2&3 \\\\ 5&7\\\\2&-2\\\\4&6 \\end{bmatrix} = \\underbrace{\\begin{bmatrix} -2/7&5/7 \\\\ 5/7&2/7\\\\2/7&-4/7\\\\4/7&2/7 \\end{bmatrix}}_Q\\underbrace{\\begin{bmatrix}7&7\\\\0&7\\end{bmatrix}}_R.$$ Let's verify that $Q$ is orthogonal by taking the dot product of the column vectors it is comprised of. \n```{r}\nA <- matrix(c(-2,5,2,4,4,7,-2,6), nrow = 4)\nQ <- matrix(c(-2/7, 5/7, 2/7, 4/7, 5/7, 2/7, -4/7, 2/7), nrow = 4)\nsum(Q[,1] * Q[,2])\n```\n\n\n```{r}\nQ <- qr.Q(qr(A), complete = TRUE)\nt(Q)\nsolve(Q)\n```\n\nThe least squares solution for $A\\x = \\mathbf b$, $\\hat{ \\x} = (A'A)^{-1}A'\\mathbf b$, takes on an interesting form if we subtitute in $A=QR$. \n\\begin{align*}\n& \\hat{ \\x}= (A'A)^{-1}A'\\mathbf b\\\\\n\\implies& \\hat{ \\x} = ((QR)'QR)^{-1}(QR)'\\mathbf b\\\\\n\\implies & (R'Q'QR) x = R'Q'\\mathbf b\\\\\n\\implies & R'R\\hat{ \\x} = R'Q'\\mathbf b & (Q' = Q^{-1})\\\\\n\\implies & R \\hat{\\x} = Q'\\mathbf b\n\\end{align*}\nOur least squares solution is not in terms of an upper triangular matrix and can be solved via back-substitution! We no longer need to explicitly calculate the inverse of $A'A$! Unfortunately, we do need to calculate $R$ and $Q'\\mathbf b$, so we've traded to problem of inverting $(A'A)$ for the problem of finding the QR decomposition of $A$. This new problem isn't quite as daunting though.\n\nThe most intuitive method of decomposing $A$ into $QR$ is via the [Gram-Schmidt process](https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process), an algorithm where we use the projections of the columns of $A$ onto each other to arrive at an orthogonal basis for the column space of $A$. The matrix formed from this basis is $Q$. \n\n```{r}\nH_reflection <- function(A, i){\n  n <- nrow(A)\n  x <- A[i:n, i]\n  # modified sign function mapping 0 -> 1 \n  sign_x1 <- 1^(x >= 0)*(-1)^(x < 0)\n  v <- x + sign_x1*norm(x, type = \"2\")*c(1, rep(0, n-i))\n  H <- diag(n)\n  H[i:n, i:n] <- diag(n-i+1) - 2 * (v %*% t(v)) / sum(v*v)\n  return(H)\n}\n\nR_Qb <- function(A, b){\n  k <- ncol(A)\n  output <- cbind(A, unlist(b))\n  for (i in 1:k) {\n    output <- H_reflection(output, i) %*% output\n  }\n  return(output[1:k,])\n}\n\nsolve_upper_triangular <- function(A, b){\n  k <- ncol(A)\n  x <- rep(0, k)\n  for (i in k:1) {\n    x[i] <- (b[i] - sum(x * A[i,]))/A[i,i]\n  }\n  return(x)\n}\n\n\nOLS <- function(y, X){\n  k <- ncol(X)\n  output <- solve_upper_triangular(\n    R_Qb(X, y)[ , 1:k],\n    R_Qb(X, y)[ , k+1]\n  )\n  return(output)\n}\n\nn <- 1e3\nx1 <- runif(n, 0, 10)\nx2 <- runif(n, 0, 10)\ne <- rnorm(n)\n\nX <- cbind(1,x1,x2)\ny <- X %*% c(1,2,3) + e\nOLS(y, X)\nlm(y ~ X - 1)\n```\n\n\n\n\n## Math Appendix: Projection {#sec-proj}\n\nLinear projection can be generalized far beyond the setting of a random vector $(Y,\\X)$. I'll *quickly* define projection in the general setting of Hilbert spaces. For details, see @rudin, @royden1988real, or @folland1999real.\n\nA normed vector space $V$ defined over a field $F$ is, as the name implies, a vector space equipped with a norm $\\norm{\\cdot}:V\\mapsto [0,\\infty)$ satisfying:\n\n1. $\\norm{v} = 0 \\iff v = 0$;\n2. $\\norm{av} = \\abs{a}\\norm{v}$;\n3. $\\norm{w + v} \\le \\norm{w} + \\norm{v}$;\n\nfor all vectors $v,w\\in V$ and scalars $a\\in F$. The norm tells us how \"far\" a vector $v\\in V$ is from the zero element (\"origin\") $0\\in V$. Any normed vector space is also a metric space if we define a metric as $d(v,w)=\\norm{v-w}$. With this metric comes the familiar definitions of convergence. If $V$ is a complete metric space (all Cauchy sequences converge in $V$), then we say $V$ is a Banach space. \n\nA Hilbert space is a complete vector space $H$ (defined over a field of scalars $F$) equipped with an inner product $\\langle\\cdot,\\cdot\\rangle: H\\times H\\to F$ which satisfies:\n\n1. $\\langle x,y \\rangle = \\langle y,x \\rangle$;\n2. $\\langle cx,y \\rangle = c\\langle y,x \\rangle$\n3. $\\langle x+z,y \\rangle = \\langle x,z \\rangle + \\langle y,z \\rangle$;\n4. $\\langle x,x \\rangle > 0 \\iff x\\neq 0$;\n\nfor all $x,y\\in H$ and $c\\in F$. All Hilbert spaces are normed vector spaces, as $\\norm{x} = \\sqrt{\\langle x,x \\rangle}$ satisfies all the properties of a norm. This makes a Hilbert space a Banach space, as we've assumed $H$ is complete. The development of Hilbert spaces was motivated by Euclidean space, as the vector space $\\mathbb R^k$ (over the field of scalars $\\mathbb R$) is a Hilbert space:\n\\begin{align*}\n\\langle \\x,\\y \\rangle &= \\x\\cdot\\y = \\sum_{i=1}^k x_iy_i,\\\\\n\\norm{\\x} &= \\left(\\sum_{i=1}^k x_i^2\\right)^{1/2},\\\\\nd(\\x,\\y) &= \\left(\\sum_{i=1}^k(y_i - x_i)^2\\right)^{1/2}.\n\\end{align*}\n\nAnother useful Hilbert space is a special case of a normed vector space known as an $L^p$ space. For a measure space $(X,\\mathcal N, \\mu)$, define $L^p$ to be the set of all measurable (real) functions $f:X\\to\\mathbb R$. The norm for this space is \n$$ \\norm{f}_p = \\left(\\int\\abs{f}^p\\ d\\mu\\right)^{1/p}.$$ In general $L^p$ spaces are not Hilbert spaces, but if $p=2$, then they are. In this case the inner product is \n\n$$\\langle f,g \\rangle = \\int\\abs{f}\\abs{g}\\ d\\mu.$$\nIn the event that the measure space is $(\\mathbb Z^+, \\mathbb Z^+, \\mu)$ where $\\mu$ is the counting measure, then a measurable function $f:\\mathbb Z^+\\to\\mathbb R$ is a sequence of numbers real $\\{x_1,x_2,\\ldots\\}$. In this case we denote the $L^p$ space as $\\ell^p$ and have \n$$ \\norm{f}_p = \\left(\\int\\abs{f}^p\\ d\\mu\\right)^{1/p} = \\left(\\sum_{i=1}^\\infty |x_i|^p\\right)^{1/2}.$$ If we $\\{x_1,x_2,\\ldots,x_k, 0,0,0,\\ldots \\}\\in\\ell ^k$, we could also consider this an element of $\\mathbb R^k$ because the trailing zeros. In this sense, Euclidean space is an $L^p$ space:\n$$\\norm{\\x}_2 = \\left(\\sum_{i=1}^k x_i^2\\right)^{1/2}.$$\n\nTwo elements of a Hilbert space are orthogonal if $\\langle x,y \\rangle = 0$. If $S\\subset H$ is a subspace of a Hilbert space $H$, there exists a unique element $\\hat y\\in S$ such that \n\\begin{align*}\n\\norm{x - \\hat y} &= \\inf_{y\\in S}\\norm{x - y},\\\\\n\\langle x-\\hat y,z \\rangle &= 0 & (\\forall z\\in S).\n\\end{align*}\n We refer to $\\hat y$ as the projection of $x$ onto $S$.\n\nFor a probability space $(\\Omega, \\mathcal F, P)$. If we define a $L^2$ space as all the random variables (measurable functions) with squared values that are integrable, then \n$$ \\langle X,Y \\rangle = \\int\\ xy\\ dP = \\E{XY}.$$\nThis is why we refer to random variables as orthogonal when $\\E{XY} = 0$! In the event we have a random vector $\\Z = (Y,\\X)$, the projection of $Y$ onto $\\X$ happens to be $\\E{Y\\mid \\X}$.\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"ols.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.554","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"ols.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"documentclass":"scrreprt"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}